// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/Bombplane_Proto.proto

#include "protobuf/Bombplane_Proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GameoverNotification_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InviteRequest_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoginResponse_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto;
namespace bombplane_proto {
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> _instance;
} _LoginResponse_default_instance_;
class OnlineUserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlineUser> _instance;
} _OnlineUser_default_instance_;
class OnlinelistNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OnlinelistNotification> _instance;
} _OnlinelistNotification_default_instance_;
class UpdateonlineBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateonlineBroadcast> _instance;
} _UpdateonlineBroadcast_default_instance_;
class InviteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteRequest> _instance;
} _InviteRequest_default_instance_;
class InviteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InviteResponse> _instance;
} _InviteResponse_default_instance_;
class UpdateroomBroadcastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateroomBroadcast> _instance;
} _UpdateroomBroadcast_default_instance_;
class CoordinateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Coordinate> _instance;
} _Coordinate_default_instance_;
class PlaneLocatorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneLocator> _instance;
} _PlaneLocator_default_instance_;
class InitposRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitposRequest> _instance;
} _InitposRequest_default_instance_;
class GameoverNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameoverNotification> _instance;
} _GameoverNotification_default_instance_;
class BombRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BombRequest> _instance;
} _BombRequest_default_instance_;
class BombResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BombResponse> _instance;
} _BombResponse_default_instance_;
class GuessRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuessRequest> _instance;
} _GuessRequest_default_instance_;
class GuessResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GuessResponse> _instance;
} _GuessResponse_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message> _instance;
  const ::bombplane_proto::LoginRequest* loginrequest_;
  const ::bombplane_proto::LoginResponse* loginresponse_;
  const ::bombplane_proto::OnlinelistNotification* onlinelistnotification_;
  const ::bombplane_proto::UpdateonlineBroadcast* updatelistnotification_;
  const ::bombplane_proto::InviteRequest* inviterequest_;
  const ::bombplane_proto::UpdateroomBroadcast* updateroombroadcast_;
  const ::bombplane_proto::InitposRequest* initposrequest_;
  const ::bombplane_proto::GameoverNotification* gameovernnotification_;
  const ::bombplane_proto::BombRequest* bombrequest_;
  const ::bombplane_proto::BombResponse* bombresponse_;
  const ::bombplane_proto::GuessRequest* guessrequest_;
  const ::bombplane_proto::GuessResponse* guessresponse_;
} _Message_default_instance_;
}  // namespace bombplane_proto
static void InitDefaultsLoginRequest_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_LoginRequest_default_instance_;
    new (ptr) ::bombplane_proto::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::LoginRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginRequest_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsLoginResponse_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_LoginResponse_default_instance_;
    new (ptr) ::bombplane_proto::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::LoginResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoginResponse_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoginResponse_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsOnlineUser_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_OnlineUser_default_instance_;
    new (ptr) ::bombplane_proto::OnlineUser();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::OnlineUser::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsOnlineUser_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsOnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_OnlinelistNotification_default_instance_;
    new (ptr) ::bombplane_proto::OnlinelistNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::OnlinelistNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsOnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsUpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_UpdateonlineBroadcast_default_instance_;
    new (ptr) ::bombplane_proto::UpdateonlineBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::UpdateonlineBroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsInviteRequest_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_InviteRequest_default_instance_;
    new (ptr) ::bombplane_proto::InviteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::InviteRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InviteRequest_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInviteRequest_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsInviteResponse_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_InviteResponse_default_instance_;
    new (ptr) ::bombplane_proto::InviteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::InviteResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InviteResponse_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInviteResponse_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsUpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_UpdateroomBroadcast_default_instance_;
    new (ptr) ::bombplane_proto::UpdateroomBroadcast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::UpdateroomBroadcast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsCoordinate_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_Coordinate_default_instance_;
    new (ptr) ::bombplane_proto::Coordinate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::Coordinate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCoordinate_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsPlaneLocator_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_PlaneLocator_default_instance_;
    new (ptr) ::bombplane_proto::PlaneLocator();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::PlaneLocator::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPlaneLocator_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsInitposRequest_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_InitposRequest_default_instance_;
    new (ptr) ::bombplane_proto::InitposRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::InitposRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInitposRequest_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsGameoverNotification_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_GameoverNotification_default_instance_;
    new (ptr) ::bombplane_proto::GameoverNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::GameoverNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GameoverNotification_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGameoverNotification_protobuf_2fBombplane_5fProto_2eproto}, {}};

static void InitDefaultsBombRequest_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_BombRequest_default_instance_;
    new (ptr) ::bombplane_proto::BombRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::BombRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBombRequest_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsBombResponse_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_BombResponse_default_instance_;
    new (ptr) ::bombplane_proto::BombResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::BombResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBombResponse_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsGuessRequest_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_GuessRequest_default_instance_;
    new (ptr) ::bombplane_proto::GuessRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::GuessRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGuessRequest_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsGuessResponse_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_GuessResponse_default_instance_;
    new (ptr) ::bombplane_proto::GuessResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::GuessResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGuessResponse_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base,}};

static void InitDefaultsMessage_protobuf_2fBombplane_5fProto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::bombplane_proto::_Message_default_instance_;
    new (ptr) ::bombplane_proto::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::bombplane_proto::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<12> scc_info_Message_protobuf_2fBombplane_5fProto_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 12, InitDefaultsMessage_protobuf_2fBombplane_5fProto_2eproto}, {
      &scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_LoginResponse_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_InviteRequest_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_UpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_GameoverNotification_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto.base,
      &scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto.base,}};

void InitDefaults_protobuf_2fBombplane_5fProto_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoginResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InviteRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InviteResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GameoverNotification_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message_protobuf_2fBombplane_5fProto_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[17];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors_protobuf_2fBombplane_5fProto_2eproto[3];
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_protobuf_2fBombplane_5fProto_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_protobuf_2fBombplane_5fProto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginRequest, username_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginRequest, password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginResponse, state_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::LoginResponse, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlineUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlineUser, username_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlineUser, userid_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlineUser, available_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlinelistNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::OnlinelistNotification, onlinelist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateonlineBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateonlineBroadcast, username_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateonlineBroadcast, userid_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateonlineBroadcast, onoff_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteRequest, taruserid_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteRequest, srcuserid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteResponse, taruserid_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InviteResponse, accept_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateroomBroadcast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateroomBroadcast, userid1_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateroomBroadcast, userid2_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::UpdateroomBroadcast, inout_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Coordinate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Coordinate, x_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Coordinate, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::PlaneLocator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::PlaneLocator, pos1_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::PlaneLocator, pos2_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::PlaneLocator, pos3_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InitposRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InitposRequest, loc_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::InitposRequest, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GameoverNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GameoverNotification, winnerid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombRequest, pos_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombRequest, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombResponse, res_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::BombResponse, pos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessRequest, loc_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessRequest, userid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessResponse, res_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::GuessResponse, loc_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Message, type_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, loginrequest_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, loginresponse_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, onlinelistnotification_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, updatelistnotification_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, inviterequest_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, updateroombroadcast_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, initposrequest_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, gameovernnotification_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, bombrequest_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, bombresponse_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, guessrequest_),
  offsetof(::bombplane_proto::MessageDefaultTypeInternal, guessresponse_),
  PROTOBUF_FIELD_OFFSET(::bombplane_proto::Message, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::bombplane_proto::LoginRequest)},
  { 7, -1, sizeof(::bombplane_proto::LoginResponse)},
  { 14, -1, sizeof(::bombplane_proto::OnlineUser)},
  { 22, -1, sizeof(::bombplane_proto::OnlinelistNotification)},
  { 28, -1, sizeof(::bombplane_proto::UpdateonlineBroadcast)},
  { 36, -1, sizeof(::bombplane_proto::InviteRequest)},
  { 43, -1, sizeof(::bombplane_proto::InviteResponse)},
  { 50, -1, sizeof(::bombplane_proto::UpdateroomBroadcast)},
  { 58, -1, sizeof(::bombplane_proto::Coordinate)},
  { 65, -1, sizeof(::bombplane_proto::PlaneLocator)},
  { 73, -1, sizeof(::bombplane_proto::InitposRequest)},
  { 80, -1, sizeof(::bombplane_proto::GameoverNotification)},
  { 86, -1, sizeof(::bombplane_proto::BombRequest)},
  { 93, -1, sizeof(::bombplane_proto::BombResponse)},
  { 100, -1, sizeof(::bombplane_proto::GuessRequest)},
  { 107, -1, sizeof(::bombplane_proto::GuessResponse)},
  { 114, -1, sizeof(::bombplane_proto::Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_OnlineUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_OnlinelistNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_UpdateonlineBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_InviteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_InviteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_UpdateroomBroadcast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_Coordinate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_PlaneLocator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_InitposRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_GameoverNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_BombRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_BombResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_GuessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_GuessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::bombplane_proto::_Message_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto = {
  {}, AddDescriptors_protobuf_2fBombplane_5fProto_2eproto, "protobuf/Bombplane_Proto.proto", schemas,
  file_default_instances, TableStruct_protobuf_2fBombplane_5fProto_2eproto::offsets,
  file_level_metadata_protobuf_2fBombplane_5fProto_2eproto, 17, file_level_enum_descriptors_protobuf_2fBombplane_5fProto_2eproto, file_level_service_descriptors_protobuf_2fBombplane_5fProto_2eproto,
};

const char descriptor_table_protodef_protobuf_2fBombplane_5fProto_2eproto[] =
  "\n\036protobuf/Bombplane_Proto.proto\022\017bombpl"
  "ane_proto\"2\n\014LoginRequest\022\020\n\010username\030\001 "
  "\001(\014\022\020\n\010password\030\002 \001(\014\"K\n\rLoginResponse\022*"
  "\n\005state\030\001 \001(\0162\033.bombplane_proto.LoginSta"
  "te\022\016\n\006userid\030\002 \001(\005\"A\n\nOnlineUser\022\020\n\010user"
  "name\030\001 \001(\014\022\016\n\006userid\030\002 \001(\005\022\021\n\tavailable\030"
  "\003 \001(\010\"I\n\026OnlinelistNotification\022/\n\nonlin"
  "elist\030\001 \003(\0132\033.bombplane_proto.OnlineUser"
  "\"H\n\025UpdateonlineBroadcast\022\020\n\010username\030\001 "
  "\001(\014\022\016\n\006userid\030\002 \001(\005\022\r\n\005onoff\030\003 \001(\010\"5\n\rIn"
  "viteRequest\022\021\n\ttaruserid\030\001 \001(\005\022\021\n\tsrcuse"
  "rid\030\002 \001(\005\"3\n\016InviteResponse\022\021\n\ttaruserid"
  "\030\001 \001(\005\022\016\n\006accept\030\002 \001(\010\"F\n\023UpdateroomBroa"
  "dcast\022\017\n\007userid1\030\001 \001(\005\022\017\n\007userid2\030\002 \001(\005\022"
  "\r\n\005inout\030\003 \001(\010\"\"\n\nCoordinate\022\t\n\001x\030\001 \001(\005\022"
  "\t\n\001y\030\002 \001(\005\"\217\001\n\014PlaneLocator\022)\n\004pos1\030\001 \001("
  "\0132\033.bombplane_proto.Coordinate\022)\n\004pos2\030\002"
  " \001(\0132\033.bombplane_proto.Coordinate\022)\n\004pos"
  "3\030\003 \001(\0132\033.bombplane_proto.Coordinate\"L\n\016"
  "InitposRequest\022*\n\003loc\030\001 \001(\0132\035.bombplane_"
  "proto.PlaneLocator\022\016\n\006userid\030\002 \001(\005\"(\n\024Ga"
  "meoverNotification\022\020\n\010winnerid\030\001 \001(\005\"G\n\013"
  "BombRequest\022(\n\003pos\030\001 \001(\0132\033.bombplane_pro"
  "to.Coordinate\022\016\n\006userid\030\002 \001(\005\"c\n\014BombRes"
  "ponse\022)\n\003res\030\001 \001(\0162\034.bombplane_proto.BOM"
  "B_RESULT\022(\n\003pos\030\002 \001(\0132\033.bombplane_proto."
  "Coordinate\"J\n\014GuessRequest\022*\n\003loc\030\001 \001(\0132"
  "\035.bombplane_proto.PlaneLocator\022\016\n\006userid"
  "\030\002 \001(\005\"H\n\rGuessResponse\022\013\n\003res\030\001 \001(\010\022*\n\003"
  "loc\030\002 \001(\0132\035.bombplane_proto.PlaneLocator"
  "\"\230\006\n\007Message\022#\n\004type\030\001 \001(\0162\025.bombplane_p"
  "roto.Type\0225\n\014loginrequest\030\002 \001(\0132\035.bombpl"
  "ane_proto.LoginRequestH\000\0227\n\rloginrespons"
  "e\030\003 \001(\0132\036.bombplane_proto.LoginResponseH"
  "\000\022I\n\026onlinelistnotification\030\004 \001(\0132\'.bomb"
  "plane_proto.OnlinelistNotificationH\000\022H\n\026"
  "updatelistnotification\030\005 \001(\0132&.bombplane"
  "_proto.UpdateonlineBroadcastH\000\0227\n\rinvite"
  "request\030\006 \001(\0132\036.bombplane_proto.InviteRe"
  "questH\000\022C\n\023updateroombroadcast\030\007 \001(\0132$.b"
  "ombplane_proto.UpdateroomBroadcastH\000\0229\n\016"
  "initposrequest\030\010 \001(\0132\037.bombplane_proto.I"
  "nitposRequestH\000\022F\n\025gameovernnotification"
  "\030\t \001(\0132%.bombplane_proto.GameoverNotific"
  "ationH\000\0223\n\013bombrequest\030\n \001(\0132\034.bombplane"
  "_proto.BombRequestH\000\0225\n\014bombresponse\030\013 \001"
  "(\0132\035.bombplane_proto.BombResponseH\000\0225\n\014g"
  "uessrequest\030\014 \001(\0132\035.bombplane_proto.Gues"
  "sRequestH\000\0227\n\rguessresponse\030\r \001(\0132\036.bomb"
  "plane_proto.GuessResponseH\000B\006\n\004body*\311\003\n\004"
  "Type\022\013\n\007UNKNOWN\020\000\022\022\n\rLOGIN_REQUEST\020\221N\022\023\n"
  "\016LOGIN_RESPONSE\020\222N\022\034\n\027ONLINELIST_NOTIFIC"
  "ATION\020\223N\022\033\n\026UPDATEONLINE_BROADCAST\020\224N\022\023\n"
  "\016INVITE_REQUEST\020\245N\022\024\n\017INVITE_RESPONSE\020\246N"
  "\022\031\n\024UPDATEROOM_BROADCAST\020\247N\022\027\n\021QUIT_NOTI"
  "FICATION\020\241\234\001\022\027\n\021KEEPALIVE_REQUEST\020\242\234\001\022\030\n"
  "\022KEEPALIVE_RESPONSE\020\243\234\001\022\025\n\017INITPOS_REQUE"
  "ST\020\261\352\001\022\030\n\022GAMESTART_RESPONSE\020\262\352\001\022\033\n\025GAME"
  "OVER_NOTIFICATION\020\263\352\001\022\034\n\026GAMECRUSH_NOTIF"
  "ICATION\020\264\352\001\022\022\n\014BOMB_REQUEST\020\273\352\001\022\023\n\rBOMB_"
  "RESPONSE\020\274\352\001\022\023\n\rGUESS_REQUEST\020\305\352\001\022\024\n\016GUE"
  "SS_RESPONSE\020\306\352\001*`\n\nLoginState\022\013\n\007SUCCESS"
  "\020\000\022\020\n\014SUCCESS_KICK\020\001\022\r\n\tNOT_EXIST\020\003\022\022\n\016W"
  "RONG_PASSWORD\020\004\022\020\n\014SERVER_ERROR\020\005*/\n\013BOM"
  "B_RESULT\022\010\n\004MISS\020\000\022\007\n\003HIT\020\001\022\r\n\tDESTORYED"
  "\020\002b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_protobuf_2fBombplane_5fProto_2eproto = {
  false, InitDefaults_protobuf_2fBombplane_5fProto_2eproto, 
  descriptor_table_protodef_protobuf_2fBombplane_5fProto_2eproto,
  "protobuf/Bombplane_Proto.proto", &assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto, 2610,
};

void AddDescriptors_protobuf_2fBombplane_5fProto_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_protobuf_2fBombplane_5fProto_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_protobuf_2fBombplane_5fProto_2eproto = []() { AddDescriptors_protobuf_2fBombplane_5fProto_2eproto(); return true; }();
namespace bombplane_proto {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return file_level_enum_descriptors_protobuf_2fBombplane_5fProto_2eproto[0];
}
bool Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10021:
    case 10022:
    case 10023:
    case 20001:
    case 20002:
    case 20003:
    case 30001:
    case 30002:
    case 30003:
    case 30004:
    case 30011:
    case 30012:
    case 30021:
    case 30022:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginState_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return file_level_enum_descriptors_protobuf_2fBombplane_5fProto_2eproto[1];
}
bool LoginState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BOMB_RESULT_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return file_level_enum_descriptors_protobuf_2fBombplane_5fProto_2eproto[2];
}
bool BOMB_RESULT_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
class LoginRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kUsernameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.LoginRequest)
}

void LoginRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:bombplane_proto.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginRequest& LoginRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // bytes password = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_password();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.LoginRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.LoginRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->username(), output);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.LoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());
  }

  // bytes password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::DynamicCastToGenerated<LoginRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
class LoginResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kStateFieldNumber;
const int LoginResponse::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    static_cast<size_t>(reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&state_)) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.LoginResponse)
}

void LoginResponse::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(userid_));
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:bombplane_proto.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
}

void LoginResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LoginResponse& LoginResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_LoginResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&state_)) + sizeof(userid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* LoginResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<LoginResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.LoginState state = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_state(static_cast<::bombplane_proto::LoginState>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.LoginResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.LoginState state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_state(static_cast< ::bombplane_proto::LoginState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.LoginResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.LoginState state = 1;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.LoginState state = 1;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.LoginResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.LoginState state = 1;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::DynamicCastToGenerated<LoginResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.state() != 0) {
    set_state(from.state());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(state_, other->state_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OnlineUser::InitAsDefaultInstance() {
}
class OnlineUser::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineUser::kUsernameFieldNumber;
const int OnlineUser::kUseridFieldNumber;
const int OnlineUser::kAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineUser::OnlineUser()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.OnlineUser)
}
OnlineUser::OnlineUser(const OnlineUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&available_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(available_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.OnlineUser)
}

void OnlineUser::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(available_));
}

OnlineUser::~OnlineUser() {
  // @@protoc_insertion_point(destructor:bombplane_proto.OnlineUser)
  SharedDtor();
}

void OnlineUser::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnlineUser::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnlineUser& OnlineUser::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OnlineUser_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void OnlineUser::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.OnlineUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(available_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OnlineUser::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OnlineUser*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool available = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_available(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OnlineUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.OnlineUser)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool available = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.OnlineUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.OnlineUser)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OnlineUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.OnlineUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->username(), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // bool available = 3;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->available(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.OnlineUser)
}

::google::protobuf::uint8* OnlineUser::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.OnlineUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // bool available = 3;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->available(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.OnlineUser)
  return target;
}

size_t OnlineUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.OnlineUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // bool available = 3;
  if (this->available() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlineUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.OnlineUser)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineUser* source =
      ::google::protobuf::DynamicCastToGenerated<OnlineUser>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.OnlineUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.OnlineUser)
    MergeFrom(*source);
  }
}

void OnlineUser::MergeFrom(const OnlineUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.OnlineUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
}

void OnlineUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.OnlineUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineUser::CopyFrom(const OnlineUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.OnlineUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineUser::IsInitialized() const {
  return true;
}

void OnlineUser::Swap(OnlineUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineUser::InternalSwap(OnlineUser* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(available_, other->available_);
}

::google::protobuf::Metadata OnlineUser::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void OnlinelistNotification::InitAsDefaultInstance() {
}
class OnlinelistNotification::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlinelistNotification::kOnlinelistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlinelistNotification::OnlinelistNotification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.OnlinelistNotification)
}
OnlinelistNotification::OnlinelistNotification(const OnlinelistNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      onlinelist_(from.onlinelist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.OnlinelistNotification)
}

void OnlinelistNotification::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto.base);
}

OnlinelistNotification::~OnlinelistNotification() {
  // @@protoc_insertion_point(destructor:bombplane_proto.OnlinelistNotification)
  SharedDtor();
}

void OnlinelistNotification::SharedDtor() {
}

void OnlinelistNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OnlinelistNotification& OnlinelistNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_OnlinelistNotification_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void OnlinelistNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.OnlinelistNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  onlinelist_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* OnlinelistNotification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<OnlinelistNotification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated .bombplane_proto.OnlineUser onlinelist = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::bombplane_proto::OnlineUser::_InternalParse;
          object = msg->add_onlinelist();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool OnlinelistNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.OnlinelistNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bombplane_proto.OnlineUser onlinelist = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_onlinelist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.OnlinelistNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.OnlinelistNotification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void OnlinelistNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.OnlinelistNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bombplane_proto.OnlineUser onlinelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->onlinelist_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->onlinelist(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.OnlinelistNotification)
}

::google::protobuf::uint8* OnlinelistNotification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.OnlinelistNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .bombplane_proto.OnlineUser onlinelist = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->onlinelist_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->onlinelist(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.OnlinelistNotification)
  return target;
}

size_t OnlinelistNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.OnlinelistNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .bombplane_proto.OnlineUser onlinelist = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->onlinelist_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->onlinelist(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OnlinelistNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.OnlinelistNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlinelistNotification* source =
      ::google::protobuf::DynamicCastToGenerated<OnlinelistNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.OnlinelistNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.OnlinelistNotification)
    MergeFrom(*source);
  }
}

void OnlinelistNotification::MergeFrom(const OnlinelistNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.OnlinelistNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  onlinelist_.MergeFrom(from.onlinelist_);
}

void OnlinelistNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.OnlinelistNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlinelistNotification::CopyFrom(const OnlinelistNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.OnlinelistNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlinelistNotification::IsInitialized() const {
  return true;
}

void OnlinelistNotification::Swap(OnlinelistNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlinelistNotification::InternalSwap(OnlinelistNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&onlinelist_)->InternalSwap(CastToBase(&other->onlinelist_));
}

::google::protobuf::Metadata OnlinelistNotification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateonlineBroadcast::InitAsDefaultInstance() {
}
class UpdateonlineBroadcast::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateonlineBroadcast::kUsernameFieldNumber;
const int UpdateonlineBroadcast::kUseridFieldNumber;
const int UpdateonlineBroadcast::kOnoffFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateonlineBroadcast::UpdateonlineBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.UpdateonlineBroadcast)
}
UpdateonlineBroadcast::UpdateonlineBroadcast(const UpdateonlineBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&userid_, &from.userid_,
    static_cast<size_t>(reinterpret_cast<char*>(&onoff_) -
    reinterpret_cast<char*>(&userid_)) + sizeof(onoff_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.UpdateonlineBroadcast)
}

void UpdateonlineBroadcast::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto.base);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&onoff_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(onoff_));
}

UpdateonlineBroadcast::~UpdateonlineBroadcast() {
  // @@protoc_insertion_point(destructor:bombplane_proto.UpdateonlineBroadcast)
  SharedDtor();
}

void UpdateonlineBroadcast::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateonlineBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateonlineBroadcast& UpdateonlineBroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateonlineBroadcast_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void UpdateonlineBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.UpdateonlineBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&userid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&onoff_) -
      reinterpret_cast<char*>(&userid_)) + sizeof(onoff_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateonlineBroadcast::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateonlineBroadcast*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bytes username = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_username();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool onoff = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_onoff(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateonlineBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.UpdateonlineBroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_username()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool onoff = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &onoff_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.UpdateonlineBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.UpdateonlineBroadcast)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateonlineBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.UpdateonlineBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->username(), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  // bool onoff = 3;
  if (this->onoff() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->onoff(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.UpdateonlineBroadcast)
}

::google::protobuf::uint8* UpdateonlineBroadcast::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.UpdateonlineBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->username(), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  // bool onoff = 3;
  if (this->onoff() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->onoff(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.UpdateonlineBroadcast)
  return target;
}

size_t UpdateonlineBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.UpdateonlineBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->username());
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  // bool onoff = 3;
  if (this->onoff() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateonlineBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.UpdateonlineBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateonlineBroadcast* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateonlineBroadcast>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.UpdateonlineBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.UpdateonlineBroadcast)
    MergeFrom(*source);
  }
}

void UpdateonlineBroadcast::MergeFrom(const UpdateonlineBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.UpdateonlineBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.onoff() != 0) {
    set_onoff(from.onoff());
  }
}

void UpdateonlineBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.UpdateonlineBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateonlineBroadcast::CopyFrom(const UpdateonlineBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.UpdateonlineBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateonlineBroadcast::IsInitialized() const {
  return true;
}

void UpdateonlineBroadcast::Swap(UpdateonlineBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateonlineBroadcast::InternalSwap(UpdateonlineBroadcast* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(userid_, other->userid_);
  swap(onoff_, other->onoff_);
}

::google::protobuf::Metadata UpdateonlineBroadcast::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InviteRequest::InitAsDefaultInstance() {
}
class InviteRequest::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteRequest::kTaruseridFieldNumber;
const int InviteRequest::kSrcuseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteRequest::InviteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.InviteRequest)
}
InviteRequest::InviteRequest(const InviteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&taruserid_, &from.taruserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&srcuserid_) -
    reinterpret_cast<char*>(&taruserid_)) + sizeof(srcuserid_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.InviteRequest)
}

void InviteRequest::SharedCtor() {
  ::memset(&taruserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&srcuserid_) -
      reinterpret_cast<char*>(&taruserid_)) + sizeof(srcuserid_));
}

InviteRequest::~InviteRequest() {
  // @@protoc_insertion_point(destructor:bombplane_proto.InviteRequest)
  SharedDtor();
}

void InviteRequest::SharedDtor() {
}

void InviteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InviteRequest& InviteRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InviteRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void InviteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&taruserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&srcuserid_) -
      reinterpret_cast<char*>(&taruserid_)) + sizeof(srcuserid_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InviteRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InviteRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 taruserid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_taruserid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 srcuserid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_srcuserid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InviteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.InviteRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 taruserid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taruserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 srcuserid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.InviteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.InviteRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InviteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taruserid(), output);
  }

  // int32 srcuserid = 2;
  if (this->srcuserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->srcuserid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.InviteRequest)
}

::google::protobuf::uint8* InviteRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.InviteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taruserid(), target);
  }

  // int32 srcuserid = 2;
  if (this->srcuserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->srcuserid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.InviteRequest)
  return target;
}

size_t InviteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.InviteRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taruserid());
  }

  // int32 srcuserid = 2;
  if (this->srcuserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->srcuserid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InviteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.InviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InviteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.InviteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.InviteRequest)
    MergeFrom(*source);
  }
}

void InviteRequest::MergeFrom(const InviteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.InviteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taruserid() != 0) {
    set_taruserid(from.taruserid());
  }
  if (from.srcuserid() != 0) {
    set_srcuserid(from.srcuserid());
  }
}

void InviteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.InviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteRequest::CopyFrom(const InviteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.InviteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteRequest::IsInitialized() const {
  return true;
}

void InviteRequest::Swap(InviteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteRequest::InternalSwap(InviteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(taruserid_, other->taruserid_);
  swap(srcuserid_, other->srcuserid_);
}

::google::protobuf::Metadata InviteRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InviteResponse::InitAsDefaultInstance() {
}
class InviteResponse::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteResponse::kTaruseridFieldNumber;
const int InviteResponse::kAcceptFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteResponse::InviteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.InviteResponse)
}
InviteResponse::InviteResponse(const InviteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&taruserid_, &from.taruserid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accept_) -
    reinterpret_cast<char*>(&taruserid_)) + sizeof(accept_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.InviteResponse)
}

void InviteResponse::SharedCtor() {
  ::memset(&taruserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accept_) -
      reinterpret_cast<char*>(&taruserid_)) + sizeof(accept_));
}

InviteResponse::~InviteResponse() {
  // @@protoc_insertion_point(destructor:bombplane_proto.InviteResponse)
  SharedDtor();
}

void InviteResponse::SharedDtor() {
}

void InviteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InviteResponse& InviteResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InviteResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void InviteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&taruserid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accept_) -
      reinterpret_cast<char*>(&taruserid_)) + sizeof(accept_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InviteResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InviteResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 taruserid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_taruserid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool accept = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_accept(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InviteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.InviteResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 taruserid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &taruserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool accept = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accept_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.InviteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.InviteResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InviteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->taruserid(), output);
  }

  // bool accept = 2;
  if (this->accept() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->accept(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.InviteResponse)
}

::google::protobuf::uint8* InviteResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.InviteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->taruserid(), target);
  }

  // bool accept = 2;
  if (this->accept() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->accept(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.InviteResponse)
  return target;
}

size_t InviteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.InviteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 taruserid = 1;
  if (this->taruserid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->taruserid());
  }

  // bool accept = 2;
  if (this->accept() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InviteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.InviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteResponse* source =
      ::google::protobuf::DynamicCastToGenerated<InviteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.InviteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.InviteResponse)
    MergeFrom(*source);
  }
}

void InviteResponse::MergeFrom(const InviteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.InviteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.taruserid() != 0) {
    set_taruserid(from.taruserid());
  }
  if (from.accept() != 0) {
    set_accept(from.accept());
  }
}

void InviteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.InviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteResponse::CopyFrom(const InviteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.InviteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteResponse::IsInitialized() const {
  return true;
}

void InviteResponse::Swap(InviteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteResponse::InternalSwap(InviteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(taruserid_, other->taruserid_);
  swap(accept_, other->accept_);
}

::google::protobuf::Metadata InviteResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void UpdateroomBroadcast::InitAsDefaultInstance() {
}
class UpdateroomBroadcast::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateroomBroadcast::kUserid1FieldNumber;
const int UpdateroomBroadcast::kUserid2FieldNumber;
const int UpdateroomBroadcast::kInoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateroomBroadcast::UpdateroomBroadcast()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.UpdateroomBroadcast)
}
UpdateroomBroadcast::UpdateroomBroadcast(const UpdateroomBroadcast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&userid1_, &from.userid1_,
    static_cast<size_t>(reinterpret_cast<char*>(&inout_) -
    reinterpret_cast<char*>(&userid1_)) + sizeof(inout_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.UpdateroomBroadcast)
}

void UpdateroomBroadcast::SharedCtor() {
  ::memset(&userid1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inout_) -
      reinterpret_cast<char*>(&userid1_)) + sizeof(inout_));
}

UpdateroomBroadcast::~UpdateroomBroadcast() {
  // @@protoc_insertion_point(destructor:bombplane_proto.UpdateroomBroadcast)
  SharedDtor();
}

void UpdateroomBroadcast::SharedDtor() {
}

void UpdateroomBroadcast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateroomBroadcast& UpdateroomBroadcast::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_UpdateroomBroadcast_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void UpdateroomBroadcast::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.UpdateroomBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&userid1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inout_) -
      reinterpret_cast<char*>(&userid1_)) + sizeof(inout_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* UpdateroomBroadcast::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<UpdateroomBroadcast*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 userid1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_userid1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 userid2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // bool inout = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_inout(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool UpdateroomBroadcast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.UpdateroomBroadcast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 userid1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool inout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &inout_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.UpdateroomBroadcast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.UpdateroomBroadcast)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void UpdateroomBroadcast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.UpdateroomBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid1 = 1;
  if (this->userid1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid1(), output);
  }

  // int32 userid2 = 2;
  if (this->userid2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid2(), output);
  }

  // bool inout = 3;
  if (this->inout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->inout(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.UpdateroomBroadcast)
}

::google::protobuf::uint8* UpdateroomBroadcast::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.UpdateroomBroadcast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 userid1 = 1;
  if (this->userid1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid1(), target);
  }

  // int32 userid2 = 2;
  if (this->userid2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid2(), target);
  }

  // bool inout = 3;
  if (this->inout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->inout(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.UpdateroomBroadcast)
  return target;
}

size_t UpdateroomBroadcast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.UpdateroomBroadcast)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 userid1 = 1;
  if (this->userid1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid1());
  }

  // int32 userid2 = 2;
  if (this->userid2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid2());
  }

  // bool inout = 3;
  if (this->inout() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateroomBroadcast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.UpdateroomBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateroomBroadcast* source =
      ::google::protobuf::DynamicCastToGenerated<UpdateroomBroadcast>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.UpdateroomBroadcast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.UpdateroomBroadcast)
    MergeFrom(*source);
  }
}

void UpdateroomBroadcast::MergeFrom(const UpdateroomBroadcast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.UpdateroomBroadcast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.userid1() != 0) {
    set_userid1(from.userid1());
  }
  if (from.userid2() != 0) {
    set_userid2(from.userid2());
  }
  if (from.inout() != 0) {
    set_inout(from.inout());
  }
}

void UpdateroomBroadcast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.UpdateroomBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateroomBroadcast::CopyFrom(const UpdateroomBroadcast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.UpdateroomBroadcast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateroomBroadcast::IsInitialized() const {
  return true;
}

void UpdateroomBroadcast::Swap(UpdateroomBroadcast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateroomBroadcast::InternalSwap(UpdateroomBroadcast* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(userid1_, other->userid1_);
  swap(userid2_, other->userid2_);
  swap(inout_, other->inout_);
}

::google::protobuf::Metadata UpdateroomBroadcast::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Coordinate::InitAsDefaultInstance() {
}
class Coordinate::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Coordinate::kXFieldNumber;
const int Coordinate::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Coordinate::Coordinate()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.Coordinate)
}
Coordinate::Coordinate(const Coordinate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.Coordinate)
}

void Coordinate::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
}

Coordinate::~Coordinate() {
  // @@protoc_insertion_point(destructor:bombplane_proto.Coordinate)
  SharedDtor();
}

void Coordinate::SharedDtor() {
}

void Coordinate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Coordinate& Coordinate::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Coordinate_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void Coordinate::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Coordinate::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Coordinate*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 y = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Coordinate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.Coordinate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.Coordinate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.Coordinate)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Coordinate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.Coordinate)
}

::google::protobuf::uint8* Coordinate::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.Coordinate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.Coordinate)
  return target;
}

size_t Coordinate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.Coordinate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Coordinate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  const Coordinate* source =
      ::google::protobuf::DynamicCastToGenerated<Coordinate>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.Coordinate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.Coordinate)
    MergeFrom(*source);
  }
}

void Coordinate::MergeFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.Coordinate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void Coordinate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Coordinate::CopyFrom(const Coordinate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.Coordinate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Coordinate::IsInitialized() const {
  return true;
}

void Coordinate::Swap(Coordinate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Coordinate::InternalSwap(Coordinate* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata Coordinate::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void PlaneLocator::InitAsDefaultInstance() {
  ::bombplane_proto::_PlaneLocator_default_instance_._instance.get_mutable()->pos1_ = const_cast< ::bombplane_proto::Coordinate*>(
      ::bombplane_proto::Coordinate::internal_default_instance());
  ::bombplane_proto::_PlaneLocator_default_instance_._instance.get_mutable()->pos2_ = const_cast< ::bombplane_proto::Coordinate*>(
      ::bombplane_proto::Coordinate::internal_default_instance());
  ::bombplane_proto::_PlaneLocator_default_instance_._instance.get_mutable()->pos3_ = const_cast< ::bombplane_proto::Coordinate*>(
      ::bombplane_proto::Coordinate::internal_default_instance());
}
class PlaneLocator::HasBitSetters {
 public:
  static const ::bombplane_proto::Coordinate& pos1(const PlaneLocator* msg);
  static const ::bombplane_proto::Coordinate& pos2(const PlaneLocator* msg);
  static const ::bombplane_proto::Coordinate& pos3(const PlaneLocator* msg);
};

const ::bombplane_proto::Coordinate&
PlaneLocator::HasBitSetters::pos1(const PlaneLocator* msg) {
  return *msg->pos1_;
}
const ::bombplane_proto::Coordinate&
PlaneLocator::HasBitSetters::pos2(const PlaneLocator* msg) {
  return *msg->pos2_;
}
const ::bombplane_proto::Coordinate&
PlaneLocator::HasBitSetters::pos3(const PlaneLocator* msg) {
  return *msg->pos3_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneLocator::kPos1FieldNumber;
const int PlaneLocator::kPos2FieldNumber;
const int PlaneLocator::kPos3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneLocator::PlaneLocator()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.PlaneLocator)
}
PlaneLocator::PlaneLocator(const PlaneLocator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos1()) {
    pos1_ = new ::bombplane_proto::Coordinate(*from.pos1_);
  } else {
    pos1_ = nullptr;
  }
  if (from.has_pos2()) {
    pos2_ = new ::bombplane_proto::Coordinate(*from.pos2_);
  } else {
    pos2_ = nullptr;
  }
  if (from.has_pos3()) {
    pos3_ = new ::bombplane_proto::Coordinate(*from.pos3_);
  } else {
    pos3_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.PlaneLocator)
}

void PlaneLocator::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&pos1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pos3_) -
      reinterpret_cast<char*>(&pos1_)) + sizeof(pos3_));
}

PlaneLocator::~PlaneLocator() {
  // @@protoc_insertion_point(destructor:bombplane_proto.PlaneLocator)
  SharedDtor();
}

void PlaneLocator::SharedDtor() {
  if (this != internal_default_instance()) delete pos1_;
  if (this != internal_default_instance()) delete pos2_;
  if (this != internal_default_instance()) delete pos3_;
}

void PlaneLocator::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PlaneLocator& PlaneLocator::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_PlaneLocator_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void PlaneLocator::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.PlaneLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos1_ != nullptr) {
    delete pos1_;
  }
  pos1_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pos2_ != nullptr) {
    delete pos2_;
  }
  pos2_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && pos3_ != nullptr) {
    delete pos3_;
  }
  pos3_ = nullptr;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* PlaneLocator::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<PlaneLocator*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.Coordinate pos1 = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::Coordinate::_InternalParse;
        object = msg->mutable_pos1();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.Coordinate pos2 = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::Coordinate::_InternalParse;
        object = msg->mutable_pos2();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.Coordinate pos3 = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::Coordinate::_InternalParse;
        object = msg->mutable_pos3();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool PlaneLocator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.PlaneLocator)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.Coordinate pos1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.Coordinate pos2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.Coordinate pos3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.PlaneLocator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.PlaneLocator)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void PlaneLocator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.PlaneLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos1 = 1;
  if (this->has_pos1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pos1(this), output);
  }

  // .bombplane_proto.Coordinate pos2 = 2;
  if (this->has_pos2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pos2(this), output);
  }

  // .bombplane_proto.Coordinate pos3 = 3;
  if (this->has_pos3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::pos3(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.PlaneLocator)
}

::google::protobuf::uint8* PlaneLocator::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.PlaneLocator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos1 = 1;
  if (this->has_pos1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pos1(this), target);
  }

  // .bombplane_proto.Coordinate pos2 = 2;
  if (this->has_pos2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pos2(this), target);
  }

  // .bombplane_proto.Coordinate pos3 = 3;
  if (this->has_pos3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::pos3(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.PlaneLocator)
  return target;
}

size_t PlaneLocator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.PlaneLocator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos1 = 1;
  if (this->has_pos1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos1_);
  }

  // .bombplane_proto.Coordinate pos2 = 2;
  if (this->has_pos2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos2_);
  }

  // .bombplane_proto.Coordinate pos3 = 3;
  if (this->has_pos3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos3_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PlaneLocator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.PlaneLocator)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneLocator* source =
      ::google::protobuf::DynamicCastToGenerated<PlaneLocator>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.PlaneLocator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.PlaneLocator)
    MergeFrom(*source);
  }
}

void PlaneLocator::MergeFrom(const PlaneLocator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.PlaneLocator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos1()) {
    mutable_pos1()->::bombplane_proto::Coordinate::MergeFrom(from.pos1());
  }
  if (from.has_pos2()) {
    mutable_pos2()->::bombplane_proto::Coordinate::MergeFrom(from.pos2());
  }
  if (from.has_pos3()) {
    mutable_pos3()->::bombplane_proto::Coordinate::MergeFrom(from.pos3());
  }
}

void PlaneLocator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.PlaneLocator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneLocator::CopyFrom(const PlaneLocator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.PlaneLocator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneLocator::IsInitialized() const {
  return true;
}

void PlaneLocator::Swap(PlaneLocator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneLocator::InternalSwap(PlaneLocator* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos1_, other->pos1_);
  swap(pos2_, other->pos2_);
  swap(pos3_, other->pos3_);
}

::google::protobuf::Metadata PlaneLocator::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void InitposRequest::InitAsDefaultInstance() {
  ::bombplane_proto::_InitposRequest_default_instance_._instance.get_mutable()->loc_ = const_cast< ::bombplane_proto::PlaneLocator*>(
      ::bombplane_proto::PlaneLocator::internal_default_instance());
}
class InitposRequest::HasBitSetters {
 public:
  static const ::bombplane_proto::PlaneLocator& loc(const InitposRequest* msg);
};

const ::bombplane_proto::PlaneLocator&
InitposRequest::HasBitSetters::loc(const InitposRequest* msg) {
  return *msg->loc_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitposRequest::kLocFieldNumber;
const int InitposRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitposRequest::InitposRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.InitposRequest)
}
InitposRequest::InitposRequest(const InitposRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loc()) {
    loc_ = new ::bombplane_proto::PlaneLocator(*from.loc_);
  } else {
    loc_ = nullptr;
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.InitposRequest)
}

void InitposRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&loc_)) + sizeof(userid_));
}

InitposRequest::~InitposRequest() {
  // @@protoc_insertion_point(destructor:bombplane_proto.InitposRequest)
  SharedDtor();
}

void InitposRequest::SharedDtor() {
  if (this != internal_default_instance()) delete loc_;
}

void InitposRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InitposRequest& InitposRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_InitposRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void InitposRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.InitposRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
  userid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* InitposRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<InitposRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.PlaneLocator loc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::PlaneLocator::_InternalParse;
        object = msg->mutable_loc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool InitposRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.InitposRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.PlaneLocator loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.InitposRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.InitposRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void InitposRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.InitposRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::loc(this), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.InitposRequest)
}

::google::protobuf::uint8* InitposRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.InitposRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::loc(this), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.InitposRequest)
  return target;
}

size_t InitposRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.InitposRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loc_);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitposRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.InitposRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitposRequest* source =
      ::google::protobuf::DynamicCastToGenerated<InitposRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.InitposRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.InitposRequest)
    MergeFrom(*source);
  }
}

void InitposRequest::MergeFrom(const InitposRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.InitposRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loc()) {
    mutable_loc()->::bombplane_proto::PlaneLocator::MergeFrom(from.loc());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void InitposRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.InitposRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitposRequest::CopyFrom(const InitposRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.InitposRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitposRequest::IsInitialized() const {
  return true;
}

void InitposRequest::Swap(InitposRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitposRequest::InternalSwap(InitposRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(loc_, other->loc_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata InitposRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GameoverNotification::InitAsDefaultInstance() {
}
class GameoverNotification::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameoverNotification::kWinneridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameoverNotification::GameoverNotification()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.GameoverNotification)
}
GameoverNotification::GameoverNotification(const GameoverNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  winnerid_ = from.winnerid_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.GameoverNotification)
}

void GameoverNotification::SharedCtor() {
  winnerid_ = 0;
}

GameoverNotification::~GameoverNotification() {
  // @@protoc_insertion_point(destructor:bombplane_proto.GameoverNotification)
  SharedDtor();
}

void GameoverNotification::SharedDtor() {
}

void GameoverNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GameoverNotification& GameoverNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GameoverNotification_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void GameoverNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.GameoverNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  winnerid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GameoverNotification::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GameoverNotification*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 winnerid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_winnerid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GameoverNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.GameoverNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 winnerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &winnerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.GameoverNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.GameoverNotification)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GameoverNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.GameoverNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 winnerid = 1;
  if (this->winnerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->winnerid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.GameoverNotification)
}

::google::protobuf::uint8* GameoverNotification::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.GameoverNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 winnerid = 1;
  if (this->winnerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->winnerid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.GameoverNotification)
  return target;
}

size_t GameoverNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.GameoverNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 winnerid = 1;
  if (this->winnerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->winnerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GameoverNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.GameoverNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const GameoverNotification* source =
      ::google::protobuf::DynamicCastToGenerated<GameoverNotification>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.GameoverNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.GameoverNotification)
    MergeFrom(*source);
  }
}

void GameoverNotification::MergeFrom(const GameoverNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.GameoverNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.winnerid() != 0) {
    set_winnerid(from.winnerid());
  }
}

void GameoverNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.GameoverNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameoverNotification::CopyFrom(const GameoverNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.GameoverNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameoverNotification::IsInitialized() const {
  return true;
}

void GameoverNotification::Swap(GameoverNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameoverNotification::InternalSwap(GameoverNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(winnerid_, other->winnerid_);
}

::google::protobuf::Metadata GameoverNotification::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BombRequest::InitAsDefaultInstance() {
  ::bombplane_proto::_BombRequest_default_instance_._instance.get_mutable()->pos_ = const_cast< ::bombplane_proto::Coordinate*>(
      ::bombplane_proto::Coordinate::internal_default_instance());
}
class BombRequest::HasBitSetters {
 public:
  static const ::bombplane_proto::Coordinate& pos(const BombRequest* msg);
};

const ::bombplane_proto::Coordinate&
BombRequest::HasBitSetters::pos(const BombRequest* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BombRequest::kPosFieldNumber;
const int BombRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BombRequest::BombRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.BombRequest)
}
BombRequest::BombRequest(const BombRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::bombplane_proto::Coordinate(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.BombRequest)
}

void BombRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(userid_));
}

BombRequest::~BombRequest() {
  // @@protoc_insertion_point(destructor:bombplane_proto.BombRequest)
  SharedDtor();
}

void BombRequest::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void BombRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BombRequest& BombRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BombRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void BombRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.BombRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  userid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BombRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BombRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.Coordinate pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::Coordinate::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BombRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.BombRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.Coordinate pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.BombRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.BombRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BombRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.BombRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos = 1;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::pos(this), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.BombRequest)
}

::google::protobuf::uint8* BombRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.BombRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos = 1;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::pos(this), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.BombRequest)
  return target;
}

size_t BombRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.BombRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos = 1;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BombRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.BombRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const BombRequest* source =
      ::google::protobuf::DynamicCastToGenerated<BombRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.BombRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.BombRequest)
    MergeFrom(*source);
  }
}

void BombRequest::MergeFrom(const BombRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.BombRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::bombplane_proto::Coordinate::MergeFrom(from.pos());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void BombRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.BombRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BombRequest::CopyFrom(const BombRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.BombRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BombRequest::IsInitialized() const {
  return true;
}

void BombRequest::Swap(BombRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BombRequest::InternalSwap(BombRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata BombRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void BombResponse::InitAsDefaultInstance() {
  ::bombplane_proto::_BombResponse_default_instance_._instance.get_mutable()->pos_ = const_cast< ::bombplane_proto::Coordinate*>(
      ::bombplane_proto::Coordinate::internal_default_instance());
}
class BombResponse::HasBitSetters {
 public:
  static const ::bombplane_proto::Coordinate& pos(const BombResponse* msg);
};

const ::bombplane_proto::Coordinate&
BombResponse::HasBitSetters::pos(const BombResponse* msg) {
  return *msg->pos_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BombResponse::kResFieldNumber;
const int BombResponse::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BombResponse::BombResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.BombResponse)
}
BombResponse::BombResponse(const BombResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pos()) {
    pos_ = new ::bombplane_proto::Coordinate(*from.pos_);
  } else {
    pos_ = nullptr;
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.BombResponse)
}

void BombResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&pos_)) + sizeof(res_));
}

BombResponse::~BombResponse() {
  // @@protoc_insertion_point(destructor:bombplane_proto.BombResponse)
  SharedDtor();
}

void BombResponse::SharedDtor() {
  if (this != internal_default_instance()) delete pos_;
}

void BombResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BombResponse& BombResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_BombResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void BombResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.BombResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
  res_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* BombResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<BombResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.BOMB_RESULT res = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_res(static_cast<::bombplane_proto::BOMB_RESULT>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .bombplane_proto.Coordinate pos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::Coordinate::_InternalParse;
        object = msg->mutable_pos();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool BombResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.BombResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.BOMB_RESULT res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_res(static_cast< ::bombplane_proto::BOMB_RESULT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.Coordinate pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.BombResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.BombResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void BombResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.BombResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.BOMB_RESULT res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->res(), output);
  }

  // .bombplane_proto.Coordinate pos = 2;
  if (this->has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::pos(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.BombResponse)
}

::google::protobuf::uint8* BombResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.BombResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.BOMB_RESULT res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->res(), target);
  }

  // .bombplane_proto.Coordinate pos = 2;
  if (this->has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::pos(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.BombResponse)
  return target;
}

size_t BombResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.BombResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.Coordinate pos = 2;
  if (this->has_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pos_);
  }

  // .bombplane_proto.BOMB_RESULT res = 1;
  if (this->res() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->res());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BombResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.BombResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const BombResponse* source =
      ::google::protobuf::DynamicCastToGenerated<BombResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.BombResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.BombResponse)
    MergeFrom(*source);
  }
}

void BombResponse::MergeFrom(const BombResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.BombResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pos()) {
    mutable_pos()->::bombplane_proto::Coordinate::MergeFrom(from.pos());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void BombResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.BombResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BombResponse::CopyFrom(const BombResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.BombResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BombResponse::IsInitialized() const {
  return true;
}

void BombResponse::Swap(BombResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BombResponse::InternalSwap(BombResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(pos_, other->pos_);
  swap(res_, other->res_);
}

::google::protobuf::Metadata BombResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GuessRequest::InitAsDefaultInstance() {
  ::bombplane_proto::_GuessRequest_default_instance_._instance.get_mutable()->loc_ = const_cast< ::bombplane_proto::PlaneLocator*>(
      ::bombplane_proto::PlaneLocator::internal_default_instance());
}
class GuessRequest::HasBitSetters {
 public:
  static const ::bombplane_proto::PlaneLocator& loc(const GuessRequest* msg);
};

const ::bombplane_proto::PlaneLocator&
GuessRequest::HasBitSetters::loc(const GuessRequest* msg) {
  return *msg->loc_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuessRequest::kLocFieldNumber;
const int GuessRequest::kUseridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuessRequest::GuessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.GuessRequest)
}
GuessRequest::GuessRequest(const GuessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loc()) {
    loc_ = new ::bombplane_proto::PlaneLocator(*from.loc_);
  } else {
    loc_ = nullptr;
  }
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.GuessRequest)
}

void GuessRequest::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&loc_)) + sizeof(userid_));
}

GuessRequest::~GuessRequest() {
  // @@protoc_insertion_point(destructor:bombplane_proto.GuessRequest)
  SharedDtor();
}

void GuessRequest::SharedDtor() {
  if (this != internal_default_instance()) delete loc_;
}

void GuessRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GuessRequest& GuessRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GuessRequest_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void GuessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.GuessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
  userid_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GuessRequest::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GuessRequest*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.PlaneLocator loc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::PlaneLocator::_InternalParse;
        object = msg->mutable_loc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // int32 userid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_userid(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GuessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.GuessRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.PlaneLocator loc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.GuessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.GuessRequest)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GuessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.GuessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, HasBitSetters::loc(this), output);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.GuessRequest)
}

::google::protobuf::uint8* GuessRequest::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.GuessRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, HasBitSetters::loc(this), target);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.GuessRequest)
  return target;
}

size_t GuessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.GuessRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 1;
  if (this->has_loc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loc_);
  }

  // int32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GuessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.GuessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GuessRequest* source =
      ::google::protobuf::DynamicCastToGenerated<GuessRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.GuessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.GuessRequest)
    MergeFrom(*source);
  }
}

void GuessRequest::MergeFrom(const GuessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.GuessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loc()) {
    mutable_loc()->::bombplane_proto::PlaneLocator::MergeFrom(from.loc());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
}

void GuessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.GuessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuessRequest::CopyFrom(const GuessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.GuessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuessRequest::IsInitialized() const {
  return true;
}

void GuessRequest::Swap(GuessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuessRequest::InternalSwap(GuessRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(loc_, other->loc_);
  swap(userid_, other->userid_);
}

::google::protobuf::Metadata GuessRequest::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void GuessResponse::InitAsDefaultInstance() {
  ::bombplane_proto::_GuessResponse_default_instance_._instance.get_mutable()->loc_ = const_cast< ::bombplane_proto::PlaneLocator*>(
      ::bombplane_proto::PlaneLocator::internal_default_instance());
}
class GuessResponse::HasBitSetters {
 public:
  static const ::bombplane_proto::PlaneLocator& loc(const GuessResponse* msg);
};

const ::bombplane_proto::PlaneLocator&
GuessResponse::HasBitSetters::loc(const GuessResponse* msg) {
  return *msg->loc_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GuessResponse::kResFieldNumber;
const int GuessResponse::kLocFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GuessResponse::GuessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.GuessResponse)
}
GuessResponse::GuessResponse(const GuessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loc()) {
    loc_ = new ::bombplane_proto::PlaneLocator(*from.loc_);
  } else {
    loc_ = nullptr;
  }
  res_ = from.res_;
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.GuessResponse)
}

void GuessResponse::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  ::memset(&loc_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&res_) -
      reinterpret_cast<char*>(&loc_)) + sizeof(res_));
}

GuessResponse::~GuessResponse() {
  // @@protoc_insertion_point(destructor:bombplane_proto.GuessResponse)
  SharedDtor();
}

void GuessResponse::SharedDtor() {
  if (this != internal_default_instance()) delete loc_;
}

void GuessResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GuessResponse& GuessResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_GuessResponse_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void GuessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.GuessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
  res_ = false;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* GuessResponse::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<GuessResponse*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // bool res = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_res(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .bombplane_proto.PlaneLocator loc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::PlaneLocator::_InternalParse;
        object = msg->mutable_loc();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool GuessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.GuessResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool res = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &res_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.PlaneLocator loc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.GuessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.GuessResponse)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void GuessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.GuessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->res(), output);
  }

  // .bombplane_proto.PlaneLocator loc = 2;
  if (this->has_loc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::loc(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.GuessResponse)
}

::google::protobuf::uint8* GuessResponse::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.GuessResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool res = 1;
  if (this->res() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->res(), target);
  }

  // .bombplane_proto.PlaneLocator loc = 2;
  if (this->has_loc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::loc(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.GuessResponse)
  return target;
}

size_t GuessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.GuessResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.PlaneLocator loc = 2;
  if (this->has_loc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *loc_);
  }

  // bool res = 1;
  if (this->res() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GuessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.GuessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GuessResponse* source =
      ::google::protobuf::DynamicCastToGenerated<GuessResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.GuessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.GuessResponse)
    MergeFrom(*source);
  }
}

void GuessResponse::MergeFrom(const GuessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.GuessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loc()) {
    mutable_loc()->::bombplane_proto::PlaneLocator::MergeFrom(from.loc());
  }
  if (from.res() != 0) {
    set_res(from.res());
  }
}

void GuessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.GuessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GuessResponse::CopyFrom(const GuessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.GuessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GuessResponse::IsInitialized() const {
  return true;
}

void GuessResponse::Swap(GuessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GuessResponse::InternalSwap(GuessResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(loc_, other->loc_);
  swap(res_, other->res_);
}

::google::protobuf::Metadata GuessResponse::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::bombplane_proto::_Message_default_instance_.loginrequest_ = const_cast< ::bombplane_proto::LoginRequest*>(
      ::bombplane_proto::LoginRequest::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.loginresponse_ = const_cast< ::bombplane_proto::LoginResponse*>(
      ::bombplane_proto::LoginResponse::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.onlinelistnotification_ = const_cast< ::bombplane_proto::OnlinelistNotification*>(
      ::bombplane_proto::OnlinelistNotification::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.updatelistnotification_ = const_cast< ::bombplane_proto::UpdateonlineBroadcast*>(
      ::bombplane_proto::UpdateonlineBroadcast::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.inviterequest_ = const_cast< ::bombplane_proto::InviteRequest*>(
      ::bombplane_proto::InviteRequest::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.updateroombroadcast_ = const_cast< ::bombplane_proto::UpdateroomBroadcast*>(
      ::bombplane_proto::UpdateroomBroadcast::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.initposrequest_ = const_cast< ::bombplane_proto::InitposRequest*>(
      ::bombplane_proto::InitposRequest::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.gameovernnotification_ = const_cast< ::bombplane_proto::GameoverNotification*>(
      ::bombplane_proto::GameoverNotification::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.bombrequest_ = const_cast< ::bombplane_proto::BombRequest*>(
      ::bombplane_proto::BombRequest::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.bombresponse_ = const_cast< ::bombplane_proto::BombResponse*>(
      ::bombplane_proto::BombResponse::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.guessrequest_ = const_cast< ::bombplane_proto::GuessRequest*>(
      ::bombplane_proto::GuessRequest::internal_default_instance());
  ::bombplane_proto::_Message_default_instance_.guessresponse_ = const_cast< ::bombplane_proto::GuessResponse*>(
      ::bombplane_proto::GuessResponse::internal_default_instance());
}
class Message::HasBitSetters {
 public:
  static const ::bombplane_proto::LoginRequest& loginrequest(const Message* msg);
  static const ::bombplane_proto::LoginResponse& loginresponse(const Message* msg);
  static const ::bombplane_proto::OnlinelistNotification& onlinelistnotification(const Message* msg);
  static const ::bombplane_proto::UpdateonlineBroadcast& updatelistnotification(const Message* msg);
  static const ::bombplane_proto::InviteRequest& inviterequest(const Message* msg);
  static const ::bombplane_proto::UpdateroomBroadcast& updateroombroadcast(const Message* msg);
  static const ::bombplane_proto::InitposRequest& initposrequest(const Message* msg);
  static const ::bombplane_proto::GameoverNotification& gameovernnotification(const Message* msg);
  static const ::bombplane_proto::BombRequest& bombrequest(const Message* msg);
  static const ::bombplane_proto::BombResponse& bombresponse(const Message* msg);
  static const ::bombplane_proto::GuessRequest& guessrequest(const Message* msg);
  static const ::bombplane_proto::GuessResponse& guessresponse(const Message* msg);
};

const ::bombplane_proto::LoginRequest&
Message::HasBitSetters::loginrequest(const Message* msg) {
  return *msg->body_.loginrequest_;
}
const ::bombplane_proto::LoginResponse&
Message::HasBitSetters::loginresponse(const Message* msg) {
  return *msg->body_.loginresponse_;
}
const ::bombplane_proto::OnlinelistNotification&
Message::HasBitSetters::onlinelistnotification(const Message* msg) {
  return *msg->body_.onlinelistnotification_;
}
const ::bombplane_proto::UpdateonlineBroadcast&
Message::HasBitSetters::updatelistnotification(const Message* msg) {
  return *msg->body_.updatelistnotification_;
}
const ::bombplane_proto::InviteRequest&
Message::HasBitSetters::inviterequest(const Message* msg) {
  return *msg->body_.inviterequest_;
}
const ::bombplane_proto::UpdateroomBroadcast&
Message::HasBitSetters::updateroombroadcast(const Message* msg) {
  return *msg->body_.updateroombroadcast_;
}
const ::bombplane_proto::InitposRequest&
Message::HasBitSetters::initposrequest(const Message* msg) {
  return *msg->body_.initposrequest_;
}
const ::bombplane_proto::GameoverNotification&
Message::HasBitSetters::gameovernnotification(const Message* msg) {
  return *msg->body_.gameovernnotification_;
}
const ::bombplane_proto::BombRequest&
Message::HasBitSetters::bombrequest(const Message* msg) {
  return *msg->body_.bombrequest_;
}
const ::bombplane_proto::BombResponse&
Message::HasBitSetters::bombresponse(const Message* msg) {
  return *msg->body_.bombresponse_;
}
const ::bombplane_proto::GuessRequest&
Message::HasBitSetters::guessrequest(const Message* msg) {
  return *msg->body_.guessrequest_;
}
const ::bombplane_proto::GuessResponse&
Message::HasBitSetters::guessresponse(const Message* msg) {
  return *msg->body_.guessresponse_;
}
void Message::set_allocated_loginrequest(::bombplane_proto::LoginRequest* loginrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (loginrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loginrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loginrequest, submessage_arena);
    }
    set_has_loginrequest();
    body_.loginrequest_ = loginrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.loginrequest)
}
void Message::set_allocated_loginresponse(::bombplane_proto::LoginResponse* loginresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (loginresponse) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loginresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loginresponse, submessage_arena);
    }
    set_has_loginresponse();
    body_.loginresponse_ = loginresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.loginresponse)
}
void Message::set_allocated_onlinelistnotification(::bombplane_proto::OnlinelistNotification* onlinelistnotification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (onlinelistnotification) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      onlinelistnotification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, onlinelistnotification, submessage_arena);
    }
    set_has_onlinelistnotification();
    body_.onlinelistnotification_ = onlinelistnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.onlinelistnotification)
}
void Message::set_allocated_updatelistnotification(::bombplane_proto::UpdateonlineBroadcast* updatelistnotification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (updatelistnotification) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      updatelistnotification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updatelistnotification, submessage_arena);
    }
    set_has_updatelistnotification();
    body_.updatelistnotification_ = updatelistnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.updatelistnotification)
}
void Message::set_allocated_inviterequest(::bombplane_proto::InviteRequest* inviterequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (inviterequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      inviterequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inviterequest, submessage_arena);
    }
    set_has_inviterequest();
    body_.inviterequest_ = inviterequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.inviterequest)
}
void Message::set_allocated_updateroombroadcast(::bombplane_proto::UpdateroomBroadcast* updateroombroadcast) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (updateroombroadcast) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      updateroombroadcast = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updateroombroadcast, submessage_arena);
    }
    set_has_updateroombroadcast();
    body_.updateroombroadcast_ = updateroombroadcast;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.updateroombroadcast)
}
void Message::set_allocated_initposrequest(::bombplane_proto::InitposRequest* initposrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (initposrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      initposrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, initposrequest, submessage_arena);
    }
    set_has_initposrequest();
    body_.initposrequest_ = initposrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.initposrequest)
}
void Message::set_allocated_gameovernnotification(::bombplane_proto::GameoverNotification* gameovernnotification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (gameovernnotification) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      gameovernnotification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, gameovernnotification, submessage_arena);
    }
    set_has_gameovernnotification();
    body_.gameovernnotification_ = gameovernnotification;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.gameovernnotification)
}
void Message::set_allocated_bombrequest(::bombplane_proto::BombRequest* bombrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (bombrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bombrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bombrequest, submessage_arena);
    }
    set_has_bombrequest();
    body_.bombrequest_ = bombrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.bombrequest)
}
void Message::set_allocated_bombresponse(::bombplane_proto::BombResponse* bombresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (bombresponse) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bombresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bombresponse, submessage_arena);
    }
    set_has_bombresponse();
    body_.bombresponse_ = bombresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.bombresponse)
}
void Message::set_allocated_guessrequest(::bombplane_proto::GuessRequest* guessrequest) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (guessrequest) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guessrequest = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guessrequest, submessage_arena);
    }
    set_has_guessrequest();
    body_.guessrequest_ = guessrequest;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.guessrequest)
}
void Message::set_allocated_guessresponse(::bombplane_proto::GuessResponse* guessresponse) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_body();
  if (guessresponse) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      guessresponse = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, guessresponse, submessage_arena);
    }
    set_has_guessresponse();
    body_.guessresponse_ = guessresponse;
  }
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.Message.guessresponse)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTypeFieldNumber;
const int Message::kLoginrequestFieldNumber;
const int Message::kLoginresponseFieldNumber;
const int Message::kOnlinelistnotificationFieldNumber;
const int Message::kUpdatelistnotificationFieldNumber;
const int Message::kInviterequestFieldNumber;
const int Message::kUpdateroombroadcastFieldNumber;
const int Message::kInitposrequestFieldNumber;
const int Message::kGameovernnotificationFieldNumber;
const int Message::kBombrequestFieldNumber;
const int Message::kBombresponseFieldNumber;
const int Message::kGuessrequestFieldNumber;
const int Message::kGuessresponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:bombplane_proto.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  clear_has_body();
  switch (from.body_case()) {
    case kLoginrequest: {
      mutable_loginrequest()->::bombplane_proto::LoginRequest::MergeFrom(from.loginrequest());
      break;
    }
    case kLoginresponse: {
      mutable_loginresponse()->::bombplane_proto::LoginResponse::MergeFrom(from.loginresponse());
      break;
    }
    case kOnlinelistnotification: {
      mutable_onlinelistnotification()->::bombplane_proto::OnlinelistNotification::MergeFrom(from.onlinelistnotification());
      break;
    }
    case kUpdatelistnotification: {
      mutable_updatelistnotification()->::bombplane_proto::UpdateonlineBroadcast::MergeFrom(from.updatelistnotification());
      break;
    }
    case kInviterequest: {
      mutable_inviterequest()->::bombplane_proto::InviteRequest::MergeFrom(from.inviterequest());
      break;
    }
    case kUpdateroombroadcast: {
      mutable_updateroombroadcast()->::bombplane_proto::UpdateroomBroadcast::MergeFrom(from.updateroombroadcast());
      break;
    }
    case kInitposrequest: {
      mutable_initposrequest()->::bombplane_proto::InitposRequest::MergeFrom(from.initposrequest());
      break;
    }
    case kGameovernnotification: {
      mutable_gameovernnotification()->::bombplane_proto::GameoverNotification::MergeFrom(from.gameovernnotification());
      break;
    }
    case kBombrequest: {
      mutable_bombrequest()->::bombplane_proto::BombRequest::MergeFrom(from.bombrequest());
      break;
    }
    case kBombresponse: {
      mutable_bombresponse()->::bombplane_proto::BombResponse::MergeFrom(from.bombresponse());
      break;
    }
    case kGuessrequest: {
      mutable_guessrequest()->::bombplane_proto::GuessRequest::MergeFrom(from.guessrequest());
      break;
    }
    case kGuessresponse: {
      mutable_guessresponse()->::bombplane_proto::GuessResponse::MergeFrom(from.guessresponse());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:bombplane_proto.Message)
}

void Message::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Message_protobuf_2fBombplane_5fProto_2eproto.base);
  type_ = 0;
  clear_has_body();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:bombplane_proto.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (has_body()) {
    clear_body();
  }
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Message_protobuf_2fBombplane_5fProto_2eproto.base);
  return *internal_default_instance();
}


void Message::clear_body() {
// @@protoc_insertion_point(one_of_clear_start:bombplane_proto.Message)
  switch (body_case()) {
    case kLoginrequest: {
      delete body_.loginrequest_;
      break;
    }
    case kLoginresponse: {
      delete body_.loginresponse_;
      break;
    }
    case kOnlinelistnotification: {
      delete body_.onlinelistnotification_;
      break;
    }
    case kUpdatelistnotification: {
      delete body_.updatelistnotification_;
      break;
    }
    case kInviterequest: {
      delete body_.inviterequest_;
      break;
    }
    case kUpdateroombroadcast: {
      delete body_.updateroombroadcast_;
      break;
    }
    case kInitposrequest: {
      delete body_.initposrequest_;
      break;
    }
    case kGameovernnotification: {
      delete body_.gameovernnotification_;
      break;
    }
    case kBombrequest: {
      delete body_.bombrequest_;
      break;
    }
    case kBombresponse: {
      delete body_.bombresponse_;
      break;
    }
    case kGuessrequest: {
      delete body_.guessrequest_;
      break;
    }
    case kGuessresponse: {
      delete body_.guessresponse_;
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = BODY_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:bombplane_proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_ = 0;
  clear_body();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Message::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Message*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // .bombplane_proto.Type type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        ::google::protobuf::uint64 val = ::google::protobuf::internal::ReadVarint(&ptr);
        msg->set_type(static_cast<::bombplane_proto::Type>(val));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .bombplane_proto.LoginRequest loginrequest = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::LoginRequest::_InternalParse;
        object = msg->mutable_loginrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.LoginResponse loginresponse = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::LoginResponse::_InternalParse;
        object = msg->mutable_loginresponse();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::OnlinelistNotification::_InternalParse;
        object = msg->mutable_onlinelistnotification();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::UpdateonlineBroadcast::_InternalParse;
        object = msg->mutable_updatelistnotification();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.InviteRequest inviterequest = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::InviteRequest::_InternalParse;
        object = msg->mutable_inviterequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::UpdateroomBroadcast::_InternalParse;
        object = msg->mutable_updateroombroadcast();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.InitposRequest initposrequest = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 66) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::InitposRequest::_InternalParse;
        object = msg->mutable_initposrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.GameoverNotification gameovernnotification = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::GameoverNotification::_InternalParse;
        object = msg->mutable_gameovernnotification();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.BombRequest bombrequest = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::BombRequest::_InternalParse;
        object = msg->mutable_bombrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.BombResponse bombresponse = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::BombResponse::_InternalParse;
        object = msg->mutable_bombresponse();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.GuessRequest guessrequest = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::GuessRequest::_InternalParse;
        object = msg->mutable_guessrequest();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .bombplane_proto.GuessResponse guessresponse = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::bombplane_proto::GuessResponse::_InternalParse;
        object = msg->mutable_guessresponse();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:bombplane_proto.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .bombplane_proto.Type type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {
          int value = 0;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::bombplane_proto::Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.LoginRequest loginrequest = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loginrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.LoginResponse loginresponse = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loginresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_onlinelistnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updatelistnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.InviteRequest inviterequest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_inviterequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updateroombroadcast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.InitposRequest initposrequest = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (66 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_initposrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.GameoverNotification gameovernnotification = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (74 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gameovernnotification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.BombRequest bombrequest = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (82 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bombrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.BombResponse bombresponse = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (90 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bombresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.GuessRequest guessrequest = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (98 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guessrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .bombplane_proto.GuessResponse guessresponse = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (106 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_guessresponse()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:bombplane_proto.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:bombplane_proto.Message)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:bombplane_proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Type type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // .bombplane_proto.LoginRequest loginrequest = 2;
  if (has_loginrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, HasBitSetters::loginrequest(this), output);
  }

  // .bombplane_proto.LoginResponse loginresponse = 3;
  if (has_loginresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, HasBitSetters::loginresponse(this), output);
  }

  // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
  if (has_onlinelistnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::onlinelistnotification(this), output);
  }

  // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
  if (has_updatelistnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::updatelistnotification(this), output);
  }

  // .bombplane_proto.InviteRequest inviterequest = 6;
  if (has_inviterequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, HasBitSetters::inviterequest(this), output);
  }

  // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
  if (has_updateroombroadcast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, HasBitSetters::updateroombroadcast(this), output);
  }

  // .bombplane_proto.InitposRequest initposrequest = 8;
  if (has_initposrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, HasBitSetters::initposrequest(this), output);
  }

  // .bombplane_proto.GameoverNotification gameovernnotification = 9;
  if (has_gameovernnotification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, HasBitSetters::gameovernnotification(this), output);
  }

  // .bombplane_proto.BombRequest bombrequest = 10;
  if (has_bombrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, HasBitSetters::bombrequest(this), output);
  }

  // .bombplane_proto.BombResponse bombresponse = 11;
  if (has_bombresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, HasBitSetters::bombresponse(this), output);
  }

  // .bombplane_proto.GuessRequest guessrequest = 12;
  if (has_guessrequest()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, HasBitSetters::guessrequest(this), output);
  }

  // .bombplane_proto.GuessResponse guessresponse = 13;
  if (has_guessresponse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, HasBitSetters::guessresponse(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:bombplane_proto.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:bombplane_proto.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .bombplane_proto.Type type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // .bombplane_proto.LoginRequest loginrequest = 2;
  if (has_loginrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, HasBitSetters::loginrequest(this), target);
  }

  // .bombplane_proto.LoginResponse loginresponse = 3;
  if (has_loginresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, HasBitSetters::loginresponse(this), target);
  }

  // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
  if (has_onlinelistnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::onlinelistnotification(this), target);
  }

  // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
  if (has_updatelistnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::updatelistnotification(this), target);
  }

  // .bombplane_proto.InviteRequest inviterequest = 6;
  if (has_inviterequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, HasBitSetters::inviterequest(this), target);
  }

  // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
  if (has_updateroombroadcast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, HasBitSetters::updateroombroadcast(this), target);
  }

  // .bombplane_proto.InitposRequest initposrequest = 8;
  if (has_initposrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, HasBitSetters::initposrequest(this), target);
  }

  // .bombplane_proto.GameoverNotification gameovernnotification = 9;
  if (has_gameovernnotification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, HasBitSetters::gameovernnotification(this), target);
  }

  // .bombplane_proto.BombRequest bombrequest = 10;
  if (has_bombrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, HasBitSetters::bombrequest(this), target);
  }

  // .bombplane_proto.BombResponse bombresponse = 11;
  if (has_bombresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, HasBitSetters::bombresponse(this), target);
  }

  // .bombplane_proto.GuessRequest guessrequest = 12;
  if (has_guessrequest()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, HasBitSetters::guessrequest(this), target);
  }

  // .bombplane_proto.GuessResponse guessresponse = 13;
  if (has_guessresponse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, HasBitSetters::guessresponse(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:bombplane_proto.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:bombplane_proto.Message)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .bombplane_proto.Type type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  switch (body_case()) {
    // .bombplane_proto.LoginRequest loginrequest = 2;
    case kLoginrequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.loginrequest_);
      break;
    }
    // .bombplane_proto.LoginResponse loginresponse = 3;
    case kLoginresponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.loginresponse_);
      break;
    }
    // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
    case kOnlinelistnotification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.onlinelistnotification_);
      break;
    }
    // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
    case kUpdatelistnotification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.updatelistnotification_);
      break;
    }
    // .bombplane_proto.InviteRequest inviterequest = 6;
    case kInviterequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.inviterequest_);
      break;
    }
    // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
    case kUpdateroombroadcast: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.updateroombroadcast_);
      break;
    }
    // .bombplane_proto.InitposRequest initposrequest = 8;
    case kInitposrequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.initposrequest_);
      break;
    }
    // .bombplane_proto.GameoverNotification gameovernnotification = 9;
    case kGameovernnotification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.gameovernnotification_);
      break;
    }
    // .bombplane_proto.BombRequest bombrequest = 10;
    case kBombrequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.bombrequest_);
      break;
    }
    // .bombplane_proto.BombResponse bombresponse = 11;
    case kBombresponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.bombresponse_);
      break;
    }
    // .bombplane_proto.GuessRequest guessrequest = 12;
    case kGuessrequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.guessrequest_);
      break;
    }
    // .bombplane_proto.GuessResponse guessresponse = 13;
    case kGuessresponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *body_.guessresponse_);
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:bombplane_proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:bombplane_proto.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:bombplane_proto.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:bombplane_proto.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  switch (from.body_case()) {
    case kLoginrequest: {
      mutable_loginrequest()->::bombplane_proto::LoginRequest::MergeFrom(from.loginrequest());
      break;
    }
    case kLoginresponse: {
      mutable_loginresponse()->::bombplane_proto::LoginResponse::MergeFrom(from.loginresponse());
      break;
    }
    case kOnlinelistnotification: {
      mutable_onlinelistnotification()->::bombplane_proto::OnlinelistNotification::MergeFrom(from.onlinelistnotification());
      break;
    }
    case kUpdatelistnotification: {
      mutable_updatelistnotification()->::bombplane_proto::UpdateonlineBroadcast::MergeFrom(from.updatelistnotification());
      break;
    }
    case kInviterequest: {
      mutable_inviterequest()->::bombplane_proto::InviteRequest::MergeFrom(from.inviterequest());
      break;
    }
    case kUpdateroombroadcast: {
      mutable_updateroombroadcast()->::bombplane_proto::UpdateroomBroadcast::MergeFrom(from.updateroombroadcast());
      break;
    }
    case kInitposrequest: {
      mutable_initposrequest()->::bombplane_proto::InitposRequest::MergeFrom(from.initposrequest());
      break;
    }
    case kGameovernnotification: {
      mutable_gameovernnotification()->::bombplane_proto::GameoverNotification::MergeFrom(from.gameovernnotification());
      break;
    }
    case kBombrequest: {
      mutable_bombrequest()->::bombplane_proto::BombRequest::MergeFrom(from.bombrequest());
      break;
    }
    case kBombresponse: {
      mutable_bombresponse()->::bombplane_proto::BombResponse::MergeFrom(from.bombresponse());
      break;
    }
    case kGuessrequest: {
      mutable_guessrequest()->::bombplane_proto::GuessRequest::MergeFrom(from.guessrequest());
      break;
    }
    case kGuessresponse: {
      mutable_guessresponse()->::bombplane_proto::GuessResponse::MergeFrom(from.guessresponse());
      break;
    }
    case BODY_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:bombplane_proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:bombplane_proto.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(body_, other->body_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_protobuf_2fBombplane_5fProto_2eproto);
  return ::file_level_metadata_protobuf_2fBombplane_5fProto_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace bombplane_proto
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::bombplane_proto::LoginRequest* Arena::CreateMaybeMessage< ::bombplane_proto::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::LoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::LoginResponse* Arena::CreateMaybeMessage< ::bombplane_proto::LoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::LoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::OnlineUser* Arena::CreateMaybeMessage< ::bombplane_proto::OnlineUser >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::OnlineUser >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::OnlinelistNotification* Arena::CreateMaybeMessage< ::bombplane_proto::OnlinelistNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::OnlinelistNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::UpdateonlineBroadcast* Arena::CreateMaybeMessage< ::bombplane_proto::UpdateonlineBroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::UpdateonlineBroadcast >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::InviteRequest* Arena::CreateMaybeMessage< ::bombplane_proto::InviteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::InviteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::InviteResponse* Arena::CreateMaybeMessage< ::bombplane_proto::InviteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::InviteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::UpdateroomBroadcast* Arena::CreateMaybeMessage< ::bombplane_proto::UpdateroomBroadcast >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::UpdateroomBroadcast >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::Coordinate* Arena::CreateMaybeMessage< ::bombplane_proto::Coordinate >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::Coordinate >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::PlaneLocator* Arena::CreateMaybeMessage< ::bombplane_proto::PlaneLocator >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::PlaneLocator >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::InitposRequest* Arena::CreateMaybeMessage< ::bombplane_proto::InitposRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::InitposRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::GameoverNotification* Arena::CreateMaybeMessage< ::bombplane_proto::GameoverNotification >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::GameoverNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::BombRequest* Arena::CreateMaybeMessage< ::bombplane_proto::BombRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::BombRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::BombResponse* Arena::CreateMaybeMessage< ::bombplane_proto::BombResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::BombResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::GuessRequest* Arena::CreateMaybeMessage< ::bombplane_proto::GuessRequest >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::GuessRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::GuessResponse* Arena::CreateMaybeMessage< ::bombplane_proto::GuessResponse >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::GuessResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::bombplane_proto::Message* Arena::CreateMaybeMessage< ::bombplane_proto::Message >(Arena* arena) {
  return Arena::CreateInternal< ::bombplane_proto::Message >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
