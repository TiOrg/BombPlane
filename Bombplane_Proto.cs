// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: bombplane.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BombplaneProto {

  /// <summary>Holder for reflection information generated from bombplane.proto</summary>
  public static partial class BombplaneReflection {

    #region Descriptor
    /// <summary>File descriptor for bombplane.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BombplaneReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9ib21icGxhbmUucHJvdG8SD2JvbWJwbGFuZV9wcm90byIyCgxMb2dpblJl",
            "cXVlc3QSEAoIdXNlcm5hbWUYASABKAwSEAoIcGFzc3dvcmQYAiABKAwiSwoN",
            "TG9naW5SZXNwb25zZRIqCgVzdGF0ZRgBIAEoDjIbLmJvbWJwbGFuZV9wcm90",
            "by5MT0dJTlNUQVRFEg4KBnVzZXJpZBgCIAEoBSJBCgpPbmxpbmVVc2VyEhAK",
            "CHVzZXJuYW1lGAEgASgMEg4KBnVzZXJpZBgCIAEoBRIRCglhdmFpbGFibGUY",
            "AyABKAgiSQoWT25saW5lbGlzdE5vdGlmaWNhdGlvbhIvCgpvbmxpbmVsaXN0",
            "GAEgAygLMhsuYm9tYnBsYW5lX3Byb3RvLk9ubGluZVVzZXIiSAoVVXBkYXRl",
            "b25saW5lQnJvYWRjYXN0EhAKCHVzZXJuYW1lGAEgASgMEg4KBnVzZXJpZBgC",
            "IAEoBRINCgVvbm9mZhgDIAEoCCI1Cg1JbnZpdGVSZXF1ZXN0EhEKCXRhcnVz",
            "ZXJpZBgBIAEoBRIRCglzcmN1c2VyaWQYAiABKAUiMwoOSW52aXRlUmVzcG9u",
            "c2USEQoJdGFydXNlcmlkGAEgASgFEg4KBmFjY2VwdBgCIAEoCCJGChNVcGRh",
            "dGVyb29tQnJvYWRjYXN0Eg8KB3VzZXJpZDEYASABKAUSDwoHdXNlcmlkMhgC",
            "IAEoBRINCgVpbm91dBgDIAEoCCIiCgpDb29yZGluYXRlEgkKAXgYASABKAUS",
            "CQoBeRgCIAEoBSKPAQoMUGxhbmVMb2NhdG9yEikKBHBvczEYASABKAsyGy5i",
            "b21icGxhbmVfcHJvdG8uQ29vcmRpbmF0ZRIpCgRwb3MyGAIgASgLMhsuYm9t",
            "YnBsYW5lX3Byb3RvLkNvb3JkaW5hdGUSKQoEcG9zMxgDIAEoCzIbLmJvbWJw",
            "bGFuZV9wcm90by5Db29yZGluYXRlIkwKDkluaXRwb3NSZXF1ZXN0EioKA2xv",
            "YxgBIAEoCzIdLmJvbWJwbGFuZV9wcm90by5QbGFuZUxvY2F0b3ISDgoGdXNl",
            "cmlkGAIgASgFIigKFEdhbWVvdmVyTm90aWZpY2F0aW9uEhAKCHdpbm5lcmlk",
            "GAEgASgFIkcKC0JvbWJSZXF1ZXN0EigKA3BvcxgBIAEoCzIbLmJvbWJwbGFu",
            "ZV9wcm90by5Db29yZGluYXRlEg4KBnVzZXJpZBgCIAEoBSJjCgxCb21iUmVz",
            "cG9uc2USKQoDcmVzGAEgASgOMhwuYm9tYnBsYW5lX3Byb3RvLkJPTUJfUkVT",
            "VUxUEigKA3BvcxgCIAEoCzIbLmJvbWJwbGFuZV9wcm90by5Db29yZGluYXRl",
            "IkoKDEd1ZXNzUmVxdWVzdBIqCgNsb2MYASABKAsyHS5ib21icGxhbmVfcHJv",
            "dG8uUGxhbmVMb2NhdG9yEg4KBnVzZXJpZBgCIAEoBSJICg1HdWVzc1Jlc3Bv",
            "bnNlEgsKA3JlcxgBIAEoCBIqCgNsb2MYAiABKAsyHS5ib21icGxhbmVfcHJv",
            "dG8uUGxhbmVMb2NhdG9yItAFCgRCb2R5EjMKDGxvZ2lucmVxdWVzdBgBIAEo",
            "CzIdLmJvbWJwbGFuZV9wcm90by5Mb2dpblJlcXVlc3QSNQoNbG9naW5yZXNw",
            "b25zZRgCIAEoCzIeLmJvbWJwbGFuZV9wcm90by5Mb2dpblJlc3BvbnNlEkcK",
            "Fm9ubGluZWxpc3Rub3RpZmljYXRpb24YAyABKAsyJy5ib21icGxhbmVfcHJv",
            "dG8uT25saW5lbGlzdE5vdGlmaWNhdGlvbhJGChZ1cGRhdGVsaXN0bm90aWZp",
            "Y2F0aW9uGAQgASgLMiYuYm9tYnBsYW5lX3Byb3RvLlVwZGF0ZW9ubGluZUJy",
            "b2FkY2FzdBI1Cg1pbnZpdGVyZXF1ZXN0GAUgASgLMh4uYm9tYnBsYW5lX3By",
            "b3RvLkludml0ZVJlcXVlc3QSQQoTdXBkYXRlcm9vbWJyb2FkY2FzdBgGIAEo",
            "CzIkLmJvbWJwbGFuZV9wcm90by5VcGRhdGVyb29tQnJvYWRjYXN0EjcKDmlu",
            "aXRwb3NyZXF1ZXN0GAcgASgLMh8uYm9tYnBsYW5lX3Byb3RvLkluaXRwb3NS",
            "ZXF1ZXN0EkQKFWdhbWVvdmVybm5vdGlmaWNhdGlvbhgIIAEoCzIlLmJvbWJw",
            "bGFuZV9wcm90by5HYW1lb3Zlck5vdGlmaWNhdGlvbhIxCgtib21icmVxdWVz",
            "dBgJIAEoCzIcLmJvbWJwbGFuZV9wcm90by5Cb21iUmVxdWVzdBIzCgxib21i",
            "cmVzcG9uc2UYCiABKAsyHS5ib21icGxhbmVfcHJvdG8uQm9tYlJlc3BvbnNl",
            "EjMKDGd1ZXNzcmVxdWVzdBgLIAEoCzIdLmJvbWJwbGFuZV9wcm90by5HdWVz",
            "c1JlcXVlc3QSNQoNZ3Vlc3NyZXNwb25zZRgMIAEoCzIeLmJvbWJwbGFuZV9w",
            "cm90by5HdWVzc1Jlc3BvbnNlIlMKB01lc3NhZ2USIwoEdHlwZRgBIAEoDjIV",
            "LmJvbWJwbGFuZV9wcm90by5UWVBFEiMKBGJvZHkYAiABKAsyFS5ib21icGxh",
            "bmVfcHJvdG8uQm9keSrJAwoEVFlQRRILCgdVbmtub3duEAASEgoNTG9naW5f",
            "UmVxdWVzdBCRThITCg5Mb2dpbl9SZXNwb25zZRCSThIcChdPbmxpbmVsaXN0",
            "X05vdGlmaWNhdGlvbhCTThIbChZVcGRhdGVvbmxpbmVfQnJvYWRjYXN0EJRO",
            "EhMKDkludml0ZV9SZXF1ZXN0EKVOEhQKD0ludml0ZV9SZXNwb25zZRCmThIZ",
            "ChRVcGRhdGVyb29tX0Jyb2FkY2FzdBCnThIXChFRdWl0X05vdGlmaWNhdGlv",
            "bhChnAESFwoRS2VlcGFsaXZlX1JlcXVlc3QQopwBEhgKEktlZXBhbGl2ZV9S",
            "ZXNwb25zZRCjnAESFQoPSW5pdHBvc19SZXF1ZXN0ELHqARIYChJHYW1lc3Rh",
            "cnRfUmVzcG9uc2UQsuoBEhsKFUdhbWVvdmVyX05vdGlmaWNhdGlvbhCz6gES",
            "HAoWR2FtZWNydXNoX05vdGlmaWNhdGlvbhC06gESEgoMQm9tYl9SZXF1ZXN0",
            "ELvqARITCg1Cb21iX1Jlc3BvbnNlELzqARITCg1HdWVzc19SZXF1ZXN0EMXq",
            "ARIUCg5HdWVzc19SZXNwb25zZRDG6gEqYAoKTE9HSU5TVEFURRILCgdTVUND",
            "RVNTEAASEAoMU1VDQ0VTU19LSUNLEAESDQoJTk9UX0VYSVNUEAMSEgoOV1JP",
            "TkdfUEFTU1dPUkQQBBIQCgxTRVJWRVJfRVJST1IQBSovCgtCT01CX1JFU1VM",
            "VBIICgRNSVNTEAASBwoDSElUEAESDQoJREVTVE9SWUVEEAJiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::BombplaneProto.TYPE), typeof(global::BombplaneProto.LOGINSTATE), typeof(global::BombplaneProto.BOMB_RESULT), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.LoginRequest), global::BombplaneProto.LoginRequest.Parser, new[]{ "Username", "Password" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.LoginResponse), global::BombplaneProto.LoginResponse.Parser, new[]{ "State", "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.OnlineUser), global::BombplaneProto.OnlineUser.Parser, new[]{ "Username", "Userid", "Available" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.OnlinelistNotification), global::BombplaneProto.OnlinelistNotification.Parser, new[]{ "Onlinelist" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.UpdateonlineBroadcast), global::BombplaneProto.UpdateonlineBroadcast.Parser, new[]{ "Username", "Userid", "Onoff" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.InviteRequest), global::BombplaneProto.InviteRequest.Parser, new[]{ "Taruserid", "Srcuserid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.InviteResponse), global::BombplaneProto.InviteResponse.Parser, new[]{ "Taruserid", "Accept" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.UpdateroomBroadcast), global::BombplaneProto.UpdateroomBroadcast.Parser, new[]{ "Userid1", "Userid2", "Inout" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.Coordinate), global::BombplaneProto.Coordinate.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.PlaneLocator), global::BombplaneProto.PlaneLocator.Parser, new[]{ "Pos1", "Pos2", "Pos3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.InitposRequest), global::BombplaneProto.InitposRequest.Parser, new[]{ "Loc", "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.GameoverNotification), global::BombplaneProto.GameoverNotification.Parser, new[]{ "Winnerid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.BombRequest), global::BombplaneProto.BombRequest.Parser, new[]{ "Pos", "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.BombResponse), global::BombplaneProto.BombResponse.Parser, new[]{ "Res", "Pos" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.GuessRequest), global::BombplaneProto.GuessRequest.Parser, new[]{ "Loc", "Userid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.GuessResponse), global::BombplaneProto.GuessResponse.Parser, new[]{ "Res", "Loc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.Body), global::BombplaneProto.Body.Parser, new[]{ "Loginrequest", "Loginresponse", "Onlinelistnotification", "Updatelistnotification", "Inviterequest", "Updateroombroadcast", "Initposrequest", "Gameovernnotification", "Bombrequest", "Bombresponse", "Guessrequest", "Guessresponse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::BombplaneProto.Message), global::BombplaneProto.Message.Parser, new[]{ "Type", "Body" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TYPE {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Login_Request")] LoginRequest = 10001,
    [pbr::OriginalName("Login_Response")] LoginResponse = 10002,
    /// <summary>
    /// S->C: 为新登录的用户发送列表
    /// </summary>
    [pbr::OriginalName("Onlinelist_Notification")] OnlinelistNotification = 10003,
    /// <summary>
    /// 上线或下线需要对所有用户发送
    /// </summary>
    [pbr::OriginalName("Updateonline_Broadcast")] UpdateonlineBroadcast = 10004,
    /// <summary>
    /// A点击B进行邀请，服务器只转发
    /// </summary>
    [pbr::OriginalName("Invite_Request")] InviteRequest = 10021,
    /// <summary>
    /// B接收A的邀请
    /// </summary>
    [pbr::OriginalName("Invite_Response")] InviteResponse = 10022,
    /// <summary>
    /// 服务器对所有用户发送“AB进入或退出房间”的消息
    /// </summary>
    [pbr::OriginalName("Updateroom_Broadcast")] UpdateroomBroadcast = 10023,
    /// <summary>
    /// C->S: 关闭窗口或掉线
    /// </summary>
    [pbr::OriginalName("Quit_Notification")] QuitNotification = 20001,
    [pbr::OriginalName("Keepalive_Request")] KeepaliveRequest = 20002,
    [pbr::OriginalName("Keepalive_Response")] KeepaliveResponse = 20003,
    /// <summary>
    /// 初始化设置飞机坐标
    /// </summary>
    [pbr::OriginalName("Initpos_Request")] InitposRequest = 30001,
    /// <summary>
    /// 通知双方游戏开始
    /// </summary>
    [pbr::OriginalName("Gamestart_Response")] GamestartResponse = 30002,
    /// <summary>
    /// 输赢结束
    /// </summary>
    [pbr::OriginalName("Gameover_Notification")] GameoverNotification = 30003,
    /// <summary>
    /// 异常结束
    /// </summary>
    [pbr::OriginalName("Gamecrush_Notification")] GamecrushNotification = 30004,
    /// <summary>
    /// 单坐标轰炸
    /// </summary>
    [pbr::OriginalName("Bomb_Request")] BombRequest = 30011,
    /// <summary>
    /// 向双方同时发送轰炸结果
    /// </summary>
    [pbr::OriginalName("Bomb_Response")] BombResponse = 30012,
    /// <summary>
    /// 双坐标猜测
    /// </summary>
    [pbr::OriginalName("Guess_Request")] GuessRequest = 30021,
    /// <summary>
    /// 向双方同时发送猜测结果
    /// </summary>
    [pbr::OriginalName("Guess_Response")] GuessResponse = 30022,
  }

  public enum LOGINSTATE {
    [pbr::OriginalName("SUCCESS")] Success = 0,
    [pbr::OriginalName("SUCCESS_KICK")] SuccessKick = 1,
    [pbr::OriginalName("NOT_EXIST")] NotExist = 3,
    [pbr::OriginalName("WRONG_PASSWORD")] WrongPassword = 4,
    [pbr::OriginalName("SERVER_ERROR")] ServerError = 5,
  }

  public enum BOMB_RESULT {
    [pbr::OriginalName("MISS")] Miss = 0,
    [pbr::OriginalName("HIT")] Hit = 1,
    [pbr::OriginalName("DESTORYED")] Destoryed = 2,
  }

  #endregion

  #region Messages
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private pb::ByteString username_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private pb::ByteString password_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadBytes();
            break;
          }
          case 18: {
            Password = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginResponse : pb::IMessage<LoginResponse> {
    private static readonly pb::MessageParser<LoginResponse> _parser = new pb::MessageParser<LoginResponse>(() => new LoginResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse(LoginResponse other) : this() {
      state_ = other.state_;
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginResponse Clone() {
      return new LoginResponse(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::BombplaneProto.LOGINSTATE state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.LOGINSTATE State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginResponse other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::BombplaneProto.LOGINSTATE) input.ReadEnum();
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlineUser : pb::IMessage<OnlineUser> {
    private static readonly pb::MessageParser<OnlineUser> _parser = new pb::MessageParser<OnlineUser>(() => new OnlineUser());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlineUser> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineUser() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineUser(OnlineUser other) : this() {
      username_ = other.username_;
      userid_ = other.userid_;
      available_ = other.available_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlineUser Clone() {
      return new OnlineUser(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private pb::ByteString username_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 3;
    private bool available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlineUser);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlineUser other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Userid != other.Userid) return false;
      if (Available != other.Available) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (Available != false) hash ^= Available.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Username);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (Available != false) {
        output.WriteRawTag(24);
        output.WriteBool(Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Username);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (Available != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlineUser other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      if (other.Available != false) {
        Available = other.Available;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadBytes();
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
          case 24: {
            Available = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OnlinelistNotification : pb::IMessage<OnlinelistNotification> {
    private static readonly pb::MessageParser<OnlinelistNotification> _parser = new pb::MessageParser<OnlinelistNotification>(() => new OnlinelistNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OnlinelistNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlinelistNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlinelistNotification(OnlinelistNotification other) : this() {
      onlinelist_ = other.onlinelist_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OnlinelistNotification Clone() {
      return new OnlinelistNotification(this);
    }

    /// <summary>Field number for the "onlinelist" field.</summary>
    public const int OnlinelistFieldNumber = 1;
    private static readonly pb::FieldCodec<global::BombplaneProto.OnlineUser> _repeated_onlinelist_codec
        = pb::FieldCodec.ForMessage(10, global::BombplaneProto.OnlineUser.Parser);
    private readonly pbc::RepeatedField<global::BombplaneProto.OnlineUser> onlinelist_ = new pbc::RepeatedField<global::BombplaneProto.OnlineUser>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::BombplaneProto.OnlineUser> Onlinelist {
      get { return onlinelist_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OnlinelistNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OnlinelistNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!onlinelist_.Equals(other.onlinelist_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= onlinelist_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      onlinelist_.WriteTo(output, _repeated_onlinelist_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += onlinelist_.CalculateSize(_repeated_onlinelist_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OnlinelistNotification other) {
      if (other == null) {
        return;
      }
      onlinelist_.Add(other.onlinelist_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            onlinelist_.AddEntriesFrom(input, _repeated_onlinelist_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateonlineBroadcast : pb::IMessage<UpdateonlineBroadcast> {
    private static readonly pb::MessageParser<UpdateonlineBroadcast> _parser = new pb::MessageParser<UpdateonlineBroadcast>(() => new UpdateonlineBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateonlineBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateonlineBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateonlineBroadcast(UpdateonlineBroadcast other) : this() {
      username_ = other.username_;
      userid_ = other.userid_;
      onoff_ = other.onoff_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateonlineBroadcast Clone() {
      return new UpdateonlineBroadcast(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private pb::ByteString username_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    /// <summary>Field number for the "onoff" field.</summary>
    public const int OnoffFieldNumber = 3;
    private bool onoff_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Onoff {
      get { return onoff_; }
      set {
        onoff_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateonlineBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateonlineBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Userid != other.Userid) return false;
      if (Onoff != other.Onoff) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (Onoff != false) hash ^= Onoff.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Username);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (Onoff != false) {
        output.WriteRawTag(24);
        output.WriteBool(Onoff);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Username);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (Onoff != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateonlineBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      if (other.Onoff != false) {
        Onoff = other.Onoff;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadBytes();
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
          case 24: {
            Onoff = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteRequest : pb::IMessage<InviteRequest> {
    private static readonly pb::MessageParser<InviteRequest> _parser = new pb::MessageParser<InviteRequest>(() => new InviteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteRequest(InviteRequest other) : this() {
      taruserid_ = other.taruserid_;
      srcuserid_ = other.srcuserid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteRequest Clone() {
      return new InviteRequest(this);
    }

    /// <summary>Field number for the "taruserid" field.</summary>
    public const int TaruseridFieldNumber = 1;
    private int taruserid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Taruserid {
      get { return taruserid_; }
      set {
        taruserid_ = value;
      }
    }

    /// <summary>Field number for the "srcuserid" field.</summary>
    public const int SrcuseridFieldNumber = 2;
    private int srcuserid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Srcuserid {
      get { return srcuserid_; }
      set {
        srcuserid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Taruserid != other.Taruserid) return false;
      if (Srcuserid != other.Srcuserid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Taruserid != 0) hash ^= Taruserid.GetHashCode();
      if (Srcuserid != 0) hash ^= Srcuserid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Taruserid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Taruserid);
      }
      if (Srcuserid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Srcuserid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Taruserid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Taruserid);
      }
      if (Srcuserid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Srcuserid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteRequest other) {
      if (other == null) {
        return;
      }
      if (other.Taruserid != 0) {
        Taruserid = other.Taruserid;
      }
      if (other.Srcuserid != 0) {
        Srcuserid = other.Srcuserid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Taruserid = input.ReadInt32();
            break;
          }
          case 16: {
            Srcuserid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InviteResponse : pb::IMessage<InviteResponse> {
    private static readonly pb::MessageParser<InviteResponse> _parser = new pb::MessageParser<InviteResponse>(() => new InviteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteResponse(InviteResponse other) : this() {
      taruserid_ = other.taruserid_;
      accept_ = other.accept_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteResponse Clone() {
      return new InviteResponse(this);
    }

    /// <summary>Field number for the "taruserid" field.</summary>
    public const int TaruseridFieldNumber = 1;
    private int taruserid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Taruserid {
      get { return taruserid_; }
      set {
        taruserid_ = value;
      }
    }

    /// <summary>Field number for the "accept" field.</summary>
    public const int AcceptFieldNumber = 2;
    private bool accept_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Accept {
      get { return accept_; }
      set {
        accept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Taruserid != other.Taruserid) return false;
      if (Accept != other.Accept) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Taruserid != 0) hash ^= Taruserid.GetHashCode();
      if (Accept != false) hash ^= Accept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Taruserid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Taruserid);
      }
      if (Accept != false) {
        output.WriteRawTag(16);
        output.WriteBool(Accept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Taruserid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Taruserid);
      }
      if (Accept != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Taruserid != 0) {
        Taruserid = other.Taruserid;
      }
      if (other.Accept != false) {
        Accept = other.Accept;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Taruserid = input.ReadInt32();
            break;
          }
          case 16: {
            Accept = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateroomBroadcast : pb::IMessage<UpdateroomBroadcast> {
    private static readonly pb::MessageParser<UpdateroomBroadcast> _parser = new pb::MessageParser<UpdateroomBroadcast>(() => new UpdateroomBroadcast());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateroomBroadcast> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateroomBroadcast() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateroomBroadcast(UpdateroomBroadcast other) : this() {
      userid1_ = other.userid1_;
      userid2_ = other.userid2_;
      inout_ = other.inout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateroomBroadcast Clone() {
      return new UpdateroomBroadcast(this);
    }

    /// <summary>Field number for the "userid1" field.</summary>
    public const int Userid1FieldNumber = 1;
    private int userid1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid1 {
      get { return userid1_; }
      set {
        userid1_ = value;
      }
    }

    /// <summary>Field number for the "userid2" field.</summary>
    public const int Userid2FieldNumber = 2;
    private int userid2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid2 {
      get { return userid2_; }
      set {
        userid2_ = value;
      }
    }

    /// <summary>Field number for the "inout" field.</summary>
    public const int InoutFieldNumber = 3;
    private bool inout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Inout {
      get { return inout_; }
      set {
        inout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateroomBroadcast);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateroomBroadcast other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid1 != other.Userid1) return false;
      if (Userid2 != other.Userid2) return false;
      if (Inout != other.Inout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid1 != 0) hash ^= Userid1.GetHashCode();
      if (Userid2 != 0) hash ^= Userid2.GetHashCode();
      if (Inout != false) hash ^= Inout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid1 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Userid1);
      }
      if (Userid2 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid2);
      }
      if (Inout != false) {
        output.WriteRawTag(24);
        output.WriteBool(Inout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid1);
      }
      if (Userid2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid2);
      }
      if (Inout != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateroomBroadcast other) {
      if (other == null) {
        return;
      }
      if (other.Userid1 != 0) {
        Userid1 = other.Userid1;
      }
      if (other.Userid2 != 0) {
        Userid2 = other.Userid2;
      }
      if (other.Inout != false) {
        Inout = other.Inout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Userid1 = input.ReadInt32();
            break;
          }
          case 16: {
            Userid2 = input.ReadInt32();
            break;
          }
          case 24: {
            Inout = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Coordinate : pb::IMessage<Coordinate> {
    private static readonly pb::MessageParser<Coordinate> _parser = new pb::MessageParser<Coordinate>(() => new Coordinate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Coordinate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate(Coordinate other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Coordinate Clone() {
      return new Coordinate(this);
    }

    /// <summary>Field number for the "x" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Coordinate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Coordinate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Coordinate other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlaneLocator : pb::IMessage<PlaneLocator> {
    private static readonly pb::MessageParser<PlaneLocator> _parser = new pb::MessageParser<PlaneLocator>(() => new PlaneLocator());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlaneLocator> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneLocator() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneLocator(PlaneLocator other) : this() {
      pos1_ = other.pos1_ != null ? other.pos1_.Clone() : null;
      pos2_ = other.pos2_ != null ? other.pos2_.Clone() : null;
      pos3_ = other.pos3_ != null ? other.pos3_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlaneLocator Clone() {
      return new PlaneLocator(this);
    }

    /// <summary>Field number for the "pos1" field.</summary>
    public const int Pos1FieldNumber = 1;
    private global::BombplaneProto.Coordinate pos1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Coordinate Pos1 {
      get { return pos1_; }
      set {
        pos1_ = value;
      }
    }

    /// <summary>Field number for the "pos2" field.</summary>
    public const int Pos2FieldNumber = 2;
    private global::BombplaneProto.Coordinate pos2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Coordinate Pos2 {
      get { return pos2_; }
      set {
        pos2_ = value;
      }
    }

    /// <summary>Field number for the "pos3" field.</summary>
    public const int Pos3FieldNumber = 3;
    private global::BombplaneProto.Coordinate pos3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Coordinate Pos3 {
      get { return pos3_; }
      set {
        pos3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlaneLocator);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlaneLocator other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos1, other.Pos1)) return false;
      if (!object.Equals(Pos2, other.Pos2)) return false;
      if (!object.Equals(Pos3, other.Pos3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pos1_ != null) hash ^= Pos1.GetHashCode();
      if (pos2_ != null) hash ^= Pos2.GetHashCode();
      if (pos3_ != null) hash ^= Pos3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pos1_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos1);
      }
      if (pos2_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos2);
      }
      if (pos3_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pos3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pos1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos1);
      }
      if (pos2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos2);
      }
      if (pos3_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlaneLocator other) {
      if (other == null) {
        return;
      }
      if (other.pos1_ != null) {
        if (pos1_ == null) {
          Pos1 = new global::BombplaneProto.Coordinate();
        }
        Pos1.MergeFrom(other.Pos1);
      }
      if (other.pos2_ != null) {
        if (pos2_ == null) {
          Pos2 = new global::BombplaneProto.Coordinate();
        }
        Pos2.MergeFrom(other.Pos2);
      }
      if (other.pos3_ != null) {
        if (pos3_ == null) {
          Pos3 = new global::BombplaneProto.Coordinate();
        }
        Pos3.MergeFrom(other.Pos3);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos1_ == null) {
              Pos1 = new global::BombplaneProto.Coordinate();
            }
            input.ReadMessage(Pos1);
            break;
          }
          case 18: {
            if (pos2_ == null) {
              Pos2 = new global::BombplaneProto.Coordinate();
            }
            input.ReadMessage(Pos2);
            break;
          }
          case 26: {
            if (pos3_ == null) {
              Pos3 = new global::BombplaneProto.Coordinate();
            }
            input.ReadMessage(Pos3);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InitposRequest : pb::IMessage<InitposRequest> {
    private static readonly pb::MessageParser<InitposRequest> _parser = new pb::MessageParser<InitposRequest>(() => new InitposRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InitposRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitposRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitposRequest(InitposRequest other) : this() {
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InitposRequest Clone() {
      return new InitposRequest(this);
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 1;
    private global::BombplaneProto.PlaneLocator loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.PlaneLocator Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InitposRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InitposRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Loc, other.Loc)) return false;
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Loc);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InitposRequest other) {
      if (other == null) {
        return;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::BombplaneProto.PlaneLocator();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (loc_ == null) {
              Loc = new global::BombplaneProto.PlaneLocator();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GameoverNotification : pb::IMessage<GameoverNotification> {
    private static readonly pb::MessageParser<GameoverNotification> _parser = new pb::MessageParser<GameoverNotification>(() => new GameoverNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameoverNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameoverNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameoverNotification(GameoverNotification other) : this() {
      winnerid_ = other.winnerid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameoverNotification Clone() {
      return new GameoverNotification(this);
    }

    /// <summary>Field number for the "winnerid" field.</summary>
    public const int WinneridFieldNumber = 1;
    private int winnerid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Winnerid {
      get { return winnerid_; }
      set {
        winnerid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameoverNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameoverNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Winnerid != other.Winnerid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Winnerid != 0) hash ^= Winnerid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Winnerid != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Winnerid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Winnerid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Winnerid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameoverNotification other) {
      if (other == null) {
        return;
      }
      if (other.Winnerid != 0) {
        Winnerid = other.Winnerid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Winnerid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BombRequest : pb::IMessage<BombRequest> {
    private static readonly pb::MessageParser<BombRequest> _parser = new pb::MessageParser<BombRequest>(() => new BombRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BombRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombRequest(BombRequest other) : this() {
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombRequest Clone() {
      return new BombRequest(this);
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 1;
    private global::BombplaneProto.Coordinate pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Coordinate Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BombRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BombRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Pos, other.Pos)) return false;
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (pos_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Pos);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BombRequest other) {
      if (other == null) {
        return;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::BombplaneProto.Coordinate();
        }
        Pos.MergeFrom(other.Pos);
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (pos_ == null) {
              Pos = new global::BombplaneProto.Coordinate();
            }
            input.ReadMessage(Pos);
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BombResponse : pb::IMessage<BombResponse> {
    private static readonly pb::MessageParser<BombResponse> _parser = new pb::MessageParser<BombResponse>(() => new BombResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BombResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombResponse(BombResponse other) : this() {
      res_ = other.res_;
      pos_ = other.pos_ != null ? other.pos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BombResponse Clone() {
      return new BombResponse(this);
    }

    /// <summary>Field number for the "res" field.</summary>
    public const int ResFieldNumber = 1;
    private global::BombplaneProto.BOMB_RESULT res_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.BOMB_RESULT Res {
      get { return res_; }
      set {
        res_ = value;
      }
    }

    /// <summary>Field number for the "pos" field.</summary>
    public const int PosFieldNumber = 2;
    private global::BombplaneProto.Coordinate pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Coordinate Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BombResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BombResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Res != other.Res) return false;
      if (!object.Equals(Pos, other.Pos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Res != 0) hash ^= Res.GetHashCode();
      if (pos_ != null) hash ^= Pos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Res != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Res);
      }
      if (pos_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Pos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Res != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Res);
      }
      if (pos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BombResponse other) {
      if (other == null) {
        return;
      }
      if (other.Res != 0) {
        Res = other.Res;
      }
      if (other.pos_ != null) {
        if (pos_ == null) {
          Pos = new global::BombplaneProto.Coordinate();
        }
        Pos.MergeFrom(other.Pos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Res = (global::BombplaneProto.BOMB_RESULT) input.ReadEnum();
            break;
          }
          case 18: {
            if (pos_ == null) {
              Pos = new global::BombplaneProto.Coordinate();
            }
            input.ReadMessage(Pos);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GuessRequest : pb::IMessage<GuessRequest> {
    private static readonly pb::MessageParser<GuessRequest> _parser = new pb::MessageParser<GuessRequest>(() => new GuessRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuessRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessRequest(GuessRequest other) : this() {
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessRequest Clone() {
      return new GuessRequest(this);
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 1;
    private global::BombplaneProto.PlaneLocator loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.PlaneLocator Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 2;
    private int userid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuessRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuessRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Loc, other.Loc)) return false;
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (Userid != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loc_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Loc);
      }
      if (Userid != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (Userid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuessRequest other) {
      if (other == null) {
        return;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::BombplaneProto.PlaneLocator();
        }
        Loc.MergeFrom(other.Loc);
      }
      if (other.Userid != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (loc_ == null) {
              Loc = new global::BombplaneProto.PlaneLocator();
            }
            input.ReadMessage(Loc);
            break;
          }
          case 16: {
            Userid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GuessResponse : pb::IMessage<GuessResponse> {
    private static readonly pb::MessageParser<GuessResponse> _parser = new pb::MessageParser<GuessResponse>(() => new GuessResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GuessResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessResponse(GuessResponse other) : this() {
      res_ = other.res_;
      loc_ = other.loc_ != null ? other.loc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GuessResponse Clone() {
      return new GuessResponse(this);
    }

    /// <summary>Field number for the "res" field.</summary>
    public const int ResFieldNumber = 1;
    private bool res_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Res {
      get { return res_; }
      set {
        res_ = value;
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 2;
    private global::BombplaneProto.PlaneLocator loc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.PlaneLocator Loc {
      get { return loc_; }
      set {
        loc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GuessResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GuessResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Res != other.Res) return false;
      if (!object.Equals(Loc, other.Loc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Res != false) hash ^= Res.GetHashCode();
      if (loc_ != null) hash ^= Loc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Res != false) {
        output.WriteRawTag(8);
        output.WriteBool(Res);
      }
      if (loc_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Res != false) {
        size += 1 + 1;
      }
      if (loc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GuessResponse other) {
      if (other == null) {
        return;
      }
      if (other.Res != false) {
        Res = other.Res;
      }
      if (other.loc_ != null) {
        if (loc_ == null) {
          Loc = new global::BombplaneProto.PlaneLocator();
        }
        Loc.MergeFrom(other.Loc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Res = input.ReadBool();
            break;
          }
          case 18: {
            if (loc_ == null) {
              Loc = new global::BombplaneProto.PlaneLocator();
            }
            input.ReadMessage(Loc);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Login &amp; Reg
  /// </summary>
  public sealed partial class Body : pb::IMessage<Body> {
    private static readonly pb::MessageParser<Body> _parser = new pb::MessageParser<Body>(() => new Body());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Body> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body(Body other) : this() {
      loginrequest_ = other.loginrequest_ != null ? other.loginrequest_.Clone() : null;
      loginresponse_ = other.loginresponse_ != null ? other.loginresponse_.Clone() : null;
      onlinelistnotification_ = other.onlinelistnotification_ != null ? other.onlinelistnotification_.Clone() : null;
      updatelistnotification_ = other.updatelistnotification_ != null ? other.updatelistnotification_.Clone() : null;
      inviterequest_ = other.inviterequest_ != null ? other.inviterequest_.Clone() : null;
      updateroombroadcast_ = other.updateroombroadcast_ != null ? other.updateroombroadcast_.Clone() : null;
      initposrequest_ = other.initposrequest_ != null ? other.initposrequest_.Clone() : null;
      gameovernnotification_ = other.gameovernnotification_ != null ? other.gameovernnotification_.Clone() : null;
      bombrequest_ = other.bombrequest_ != null ? other.bombrequest_.Clone() : null;
      bombresponse_ = other.bombresponse_ != null ? other.bombresponse_.Clone() : null;
      guessrequest_ = other.guessrequest_ != null ? other.guessrequest_.Clone() : null;
      guessresponse_ = other.guessresponse_ != null ? other.guessresponse_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Body Clone() {
      return new Body(this);
    }

    /// <summary>Field number for the "loginrequest" field.</summary>
    public const int LoginrequestFieldNumber = 1;
    private global::BombplaneProto.LoginRequest loginrequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.LoginRequest Loginrequest {
      get { return loginrequest_; }
      set {
        loginrequest_ = value;
      }
    }

    /// <summary>Field number for the "loginresponse" field.</summary>
    public const int LoginresponseFieldNumber = 2;
    private global::BombplaneProto.LoginResponse loginresponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.LoginResponse Loginresponse {
      get { return loginresponse_; }
      set {
        loginresponse_ = value;
      }
    }

    /// <summary>Field number for the "onlinelistnotification" field.</summary>
    public const int OnlinelistnotificationFieldNumber = 3;
    private global::BombplaneProto.OnlinelistNotification onlinelistnotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.OnlinelistNotification Onlinelistnotification {
      get { return onlinelistnotification_; }
      set {
        onlinelistnotification_ = value;
      }
    }

    /// <summary>Field number for the "updatelistnotification" field.</summary>
    public const int UpdatelistnotificationFieldNumber = 4;
    private global::BombplaneProto.UpdateonlineBroadcast updatelistnotification_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.UpdateonlineBroadcast Updatelistnotification {
      get { return updatelistnotification_; }
      set {
        updatelistnotification_ = value;
      }
    }

    /// <summary>Field number for the "inviterequest" field.</summary>
    public const int InviterequestFieldNumber = 5;
    private global::BombplaneProto.InviteRequest inviterequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.InviteRequest Inviterequest {
      get { return inviterequest_; }
      set {
        inviterequest_ = value;
      }
    }

    /// <summary>Field number for the "updateroombroadcast" field.</summary>
    public const int UpdateroombroadcastFieldNumber = 6;
    private global::BombplaneProto.UpdateroomBroadcast updateroombroadcast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.UpdateroomBroadcast Updateroombroadcast {
      get { return updateroombroadcast_; }
      set {
        updateroombroadcast_ = value;
      }
    }

    /// <summary>Field number for the "initposrequest" field.</summary>
    public const int InitposrequestFieldNumber = 7;
    private global::BombplaneProto.InitposRequest initposrequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.InitposRequest Initposrequest {
      get { return initposrequest_; }
      set {
        initposrequest_ = value;
      }
    }

    /// <summary>Field number for the "gameovernnotification" field.</summary>
    public const int GameovernnotificationFieldNumber = 8;
    private global::BombplaneProto.GameoverNotification gameovernnotification_;
    /// <summary>
    /// GamecrushNotification gamecrushnotification = 14;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.GameoverNotification Gameovernnotification {
      get { return gameovernnotification_; }
      set {
        gameovernnotification_ = value;
      }
    }

    /// <summary>Field number for the "bombrequest" field.</summary>
    public const int BombrequestFieldNumber = 9;
    private global::BombplaneProto.BombRequest bombrequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.BombRequest Bombrequest {
      get { return bombrequest_; }
      set {
        bombrequest_ = value;
      }
    }

    /// <summary>Field number for the "bombresponse" field.</summary>
    public const int BombresponseFieldNumber = 10;
    private global::BombplaneProto.BombResponse bombresponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.BombResponse Bombresponse {
      get { return bombresponse_; }
      set {
        bombresponse_ = value;
      }
    }

    /// <summary>Field number for the "guessrequest" field.</summary>
    public const int GuessrequestFieldNumber = 11;
    private global::BombplaneProto.GuessRequest guessrequest_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.GuessRequest Guessrequest {
      get { return guessrequest_; }
      set {
        guessrequest_ = value;
      }
    }

    /// <summary>Field number for the "guessresponse" field.</summary>
    public const int GuessresponseFieldNumber = 12;
    private global::BombplaneProto.GuessResponse guessresponse_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.GuessResponse Guessresponse {
      get { return guessresponse_; }
      set {
        guessresponse_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Body);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Body other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Loginrequest, other.Loginrequest)) return false;
      if (!object.Equals(Loginresponse, other.Loginresponse)) return false;
      if (!object.Equals(Onlinelistnotification, other.Onlinelistnotification)) return false;
      if (!object.Equals(Updatelistnotification, other.Updatelistnotification)) return false;
      if (!object.Equals(Inviterequest, other.Inviterequest)) return false;
      if (!object.Equals(Updateroombroadcast, other.Updateroombroadcast)) return false;
      if (!object.Equals(Initposrequest, other.Initposrequest)) return false;
      if (!object.Equals(Gameovernnotification, other.Gameovernnotification)) return false;
      if (!object.Equals(Bombrequest, other.Bombrequest)) return false;
      if (!object.Equals(Bombresponse, other.Bombresponse)) return false;
      if (!object.Equals(Guessrequest, other.Guessrequest)) return false;
      if (!object.Equals(Guessresponse, other.Guessresponse)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (loginrequest_ != null) hash ^= Loginrequest.GetHashCode();
      if (loginresponse_ != null) hash ^= Loginresponse.GetHashCode();
      if (onlinelistnotification_ != null) hash ^= Onlinelistnotification.GetHashCode();
      if (updatelistnotification_ != null) hash ^= Updatelistnotification.GetHashCode();
      if (inviterequest_ != null) hash ^= Inviterequest.GetHashCode();
      if (updateroombroadcast_ != null) hash ^= Updateroombroadcast.GetHashCode();
      if (initposrequest_ != null) hash ^= Initposrequest.GetHashCode();
      if (gameovernnotification_ != null) hash ^= Gameovernnotification.GetHashCode();
      if (bombrequest_ != null) hash ^= Bombrequest.GetHashCode();
      if (bombresponse_ != null) hash ^= Bombresponse.GetHashCode();
      if (guessrequest_ != null) hash ^= Guessrequest.GetHashCode();
      if (guessresponse_ != null) hash ^= Guessresponse.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (loginrequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Loginrequest);
      }
      if (loginresponse_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Loginresponse);
      }
      if (onlinelistnotification_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Onlinelistnotification);
      }
      if (updatelistnotification_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Updatelistnotification);
      }
      if (inviterequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Inviterequest);
      }
      if (updateroombroadcast_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Updateroombroadcast);
      }
      if (initposrequest_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Initposrequest);
      }
      if (gameovernnotification_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Gameovernnotification);
      }
      if (bombrequest_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Bombrequest);
      }
      if (bombresponse_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Bombresponse);
      }
      if (guessrequest_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Guessrequest);
      }
      if (guessresponse_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Guessresponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (loginrequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loginrequest);
      }
      if (loginresponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Loginresponse);
      }
      if (onlinelistnotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Onlinelistnotification);
      }
      if (updatelistnotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updatelistnotification);
      }
      if (inviterequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inviterequest);
      }
      if (updateroombroadcast_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Updateroombroadcast);
      }
      if (initposrequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Initposrequest);
      }
      if (gameovernnotification_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gameovernnotification);
      }
      if (bombrequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bombrequest);
      }
      if (bombresponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bombresponse);
      }
      if (guessrequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guessrequest);
      }
      if (guessresponse_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guessresponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Body other) {
      if (other == null) {
        return;
      }
      if (other.loginrequest_ != null) {
        if (loginrequest_ == null) {
          Loginrequest = new global::BombplaneProto.LoginRequest();
        }
        Loginrequest.MergeFrom(other.Loginrequest);
      }
      if (other.loginresponse_ != null) {
        if (loginresponse_ == null) {
          Loginresponse = new global::BombplaneProto.LoginResponse();
        }
        Loginresponse.MergeFrom(other.Loginresponse);
      }
      if (other.onlinelistnotification_ != null) {
        if (onlinelistnotification_ == null) {
          Onlinelistnotification = new global::BombplaneProto.OnlinelistNotification();
        }
        Onlinelistnotification.MergeFrom(other.Onlinelistnotification);
      }
      if (other.updatelistnotification_ != null) {
        if (updatelistnotification_ == null) {
          Updatelistnotification = new global::BombplaneProto.UpdateonlineBroadcast();
        }
        Updatelistnotification.MergeFrom(other.Updatelistnotification);
      }
      if (other.inviterequest_ != null) {
        if (inviterequest_ == null) {
          Inviterequest = new global::BombplaneProto.InviteRequest();
        }
        Inviterequest.MergeFrom(other.Inviterequest);
      }
      if (other.updateroombroadcast_ != null) {
        if (updateroombroadcast_ == null) {
          Updateroombroadcast = new global::BombplaneProto.UpdateroomBroadcast();
        }
        Updateroombroadcast.MergeFrom(other.Updateroombroadcast);
      }
      if (other.initposrequest_ != null) {
        if (initposrequest_ == null) {
          Initposrequest = new global::BombplaneProto.InitposRequest();
        }
        Initposrequest.MergeFrom(other.Initposrequest);
      }
      if (other.gameovernnotification_ != null) {
        if (gameovernnotification_ == null) {
          Gameovernnotification = new global::BombplaneProto.GameoverNotification();
        }
        Gameovernnotification.MergeFrom(other.Gameovernnotification);
      }
      if (other.bombrequest_ != null) {
        if (bombrequest_ == null) {
          Bombrequest = new global::BombplaneProto.BombRequest();
        }
        Bombrequest.MergeFrom(other.Bombrequest);
      }
      if (other.bombresponse_ != null) {
        if (bombresponse_ == null) {
          Bombresponse = new global::BombplaneProto.BombResponse();
        }
        Bombresponse.MergeFrom(other.Bombresponse);
      }
      if (other.guessrequest_ != null) {
        if (guessrequest_ == null) {
          Guessrequest = new global::BombplaneProto.GuessRequest();
        }
        Guessrequest.MergeFrom(other.Guessrequest);
      }
      if (other.guessresponse_ != null) {
        if (guessresponse_ == null) {
          Guessresponse = new global::BombplaneProto.GuessResponse();
        }
        Guessresponse.MergeFrom(other.Guessresponse);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (loginrequest_ == null) {
              Loginrequest = new global::BombplaneProto.LoginRequest();
            }
            input.ReadMessage(Loginrequest);
            break;
          }
          case 18: {
            if (loginresponse_ == null) {
              Loginresponse = new global::BombplaneProto.LoginResponse();
            }
            input.ReadMessage(Loginresponse);
            break;
          }
          case 26: {
            if (onlinelistnotification_ == null) {
              Onlinelistnotification = new global::BombplaneProto.OnlinelistNotification();
            }
            input.ReadMessage(Onlinelistnotification);
            break;
          }
          case 34: {
            if (updatelistnotification_ == null) {
              Updatelistnotification = new global::BombplaneProto.UpdateonlineBroadcast();
            }
            input.ReadMessage(Updatelistnotification);
            break;
          }
          case 42: {
            if (inviterequest_ == null) {
              Inviterequest = new global::BombplaneProto.InviteRequest();
            }
            input.ReadMessage(Inviterequest);
            break;
          }
          case 50: {
            if (updateroombroadcast_ == null) {
              Updateroombroadcast = new global::BombplaneProto.UpdateroomBroadcast();
            }
            input.ReadMessage(Updateroombroadcast);
            break;
          }
          case 58: {
            if (initposrequest_ == null) {
              Initposrequest = new global::BombplaneProto.InitposRequest();
            }
            input.ReadMessage(Initposrequest);
            break;
          }
          case 66: {
            if (gameovernnotification_ == null) {
              Gameovernnotification = new global::BombplaneProto.GameoverNotification();
            }
            input.ReadMessage(Gameovernnotification);
            break;
          }
          case 74: {
            if (bombrequest_ == null) {
              Bombrequest = new global::BombplaneProto.BombRequest();
            }
            input.ReadMessage(Bombrequest);
            break;
          }
          case 82: {
            if (bombresponse_ == null) {
              Bombresponse = new global::BombplaneProto.BombResponse();
            }
            input.ReadMessage(Bombresponse);
            break;
          }
          case 90: {
            if (guessrequest_ == null) {
              Guessrequest = new global::BombplaneProto.GuessRequest();
            }
            input.ReadMessage(Guessrequest);
            break;
          }
          case 98: {
            if (guessresponse_ == null) {
              Guessresponse = new global::BombplaneProto.GuessResponse();
            }
            input.ReadMessage(Guessresponse);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BombplaneProto.BombplaneReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      type_ = other.type_;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::BombplaneProto.TYPE type_ = 0;
    /// <summary>
    /// fixed32 sequence = 2; 
    /// 消息系列号，主要用于Request和Response，Response的值必须和Request相同，使得发送端可以进行事务匹配处理
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.TYPE Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private global::BombplaneProto.Body body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::BombplaneProto.Body Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Body, other.Body)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (body_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          Body = new global::BombplaneProto.Body();
        }
        Body.MergeFrom(other.Body);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::BombplaneProto.TYPE) input.ReadEnum();
            break;
          }
          case 18: {
            if (body_ == null) {
              Body = new global::BombplaneProto.Body();
            }
            input.ReadMessage(Body);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
