// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protobuf/Bombplane_Proto.proto

#ifndef PROTOBUF_INCLUDED_protobuf_2fBombplane_5fProto_2eproto
#define PROTOBUF_INCLUDED_protobuf_2fBombplane_5fProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_protobuf_2fBombplane_5fProto_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_protobuf_2fBombplane_5fProto_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[17]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_protobuf_2fBombplane_5fProto_2eproto();
namespace bombplane_proto {
class BombRequest;
class BombRequestDefaultTypeInternal;
extern BombRequestDefaultTypeInternal _BombRequest_default_instance_;
class BombResponse;
class BombResponseDefaultTypeInternal;
extern BombResponseDefaultTypeInternal _BombResponse_default_instance_;
class Coordinate;
class CoordinateDefaultTypeInternal;
extern CoordinateDefaultTypeInternal _Coordinate_default_instance_;
class GameoverNotification;
class GameoverNotificationDefaultTypeInternal;
extern GameoverNotificationDefaultTypeInternal _GameoverNotification_default_instance_;
class GuessRequest;
class GuessRequestDefaultTypeInternal;
extern GuessRequestDefaultTypeInternal _GuessRequest_default_instance_;
class GuessResponse;
class GuessResponseDefaultTypeInternal;
extern GuessResponseDefaultTypeInternal _GuessResponse_default_instance_;
class InitposRequest;
class InitposRequestDefaultTypeInternal;
extern InitposRequestDefaultTypeInternal _InitposRequest_default_instance_;
class InviteRequest;
class InviteRequestDefaultTypeInternal;
extern InviteRequestDefaultTypeInternal _InviteRequest_default_instance_;
class InviteResponse;
class InviteResponseDefaultTypeInternal;
extern InviteResponseDefaultTypeInternal _InviteResponse_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class OnlineUser;
class OnlineUserDefaultTypeInternal;
extern OnlineUserDefaultTypeInternal _OnlineUser_default_instance_;
class OnlinelistNotification;
class OnlinelistNotificationDefaultTypeInternal;
extern OnlinelistNotificationDefaultTypeInternal _OnlinelistNotification_default_instance_;
class PlaneLocator;
class PlaneLocatorDefaultTypeInternal;
extern PlaneLocatorDefaultTypeInternal _PlaneLocator_default_instance_;
class UpdateonlineBroadcast;
class UpdateonlineBroadcastDefaultTypeInternal;
extern UpdateonlineBroadcastDefaultTypeInternal _UpdateonlineBroadcast_default_instance_;
class UpdateroomBroadcast;
class UpdateroomBroadcastDefaultTypeInternal;
extern UpdateroomBroadcastDefaultTypeInternal _UpdateroomBroadcast_default_instance_;
}  // namespace bombplane_proto
namespace google {
namespace protobuf {
template<> ::bombplane_proto::BombRequest* Arena::CreateMaybeMessage<::bombplane_proto::BombRequest>(Arena*);
template<> ::bombplane_proto::BombResponse* Arena::CreateMaybeMessage<::bombplane_proto::BombResponse>(Arena*);
template<> ::bombplane_proto::Coordinate* Arena::CreateMaybeMessage<::bombplane_proto::Coordinate>(Arena*);
template<> ::bombplane_proto::GameoverNotification* Arena::CreateMaybeMessage<::bombplane_proto::GameoverNotification>(Arena*);
template<> ::bombplane_proto::GuessRequest* Arena::CreateMaybeMessage<::bombplane_proto::GuessRequest>(Arena*);
template<> ::bombplane_proto::GuessResponse* Arena::CreateMaybeMessage<::bombplane_proto::GuessResponse>(Arena*);
template<> ::bombplane_proto::InitposRequest* Arena::CreateMaybeMessage<::bombplane_proto::InitposRequest>(Arena*);
template<> ::bombplane_proto::InviteRequest* Arena::CreateMaybeMessage<::bombplane_proto::InviteRequest>(Arena*);
template<> ::bombplane_proto::InviteResponse* Arena::CreateMaybeMessage<::bombplane_proto::InviteResponse>(Arena*);
template<> ::bombplane_proto::LoginRequest* Arena::CreateMaybeMessage<::bombplane_proto::LoginRequest>(Arena*);
template<> ::bombplane_proto::LoginResponse* Arena::CreateMaybeMessage<::bombplane_proto::LoginResponse>(Arena*);
template<> ::bombplane_proto::Message* Arena::CreateMaybeMessage<::bombplane_proto::Message>(Arena*);
template<> ::bombplane_proto::OnlineUser* Arena::CreateMaybeMessage<::bombplane_proto::OnlineUser>(Arena*);
template<> ::bombplane_proto::OnlinelistNotification* Arena::CreateMaybeMessage<::bombplane_proto::OnlinelistNotification>(Arena*);
template<> ::bombplane_proto::PlaneLocator* Arena::CreateMaybeMessage<::bombplane_proto::PlaneLocator>(Arena*);
template<> ::bombplane_proto::UpdateonlineBroadcast* Arena::CreateMaybeMessage<::bombplane_proto::UpdateonlineBroadcast>(Arena*);
template<> ::bombplane_proto::UpdateroomBroadcast* Arena::CreateMaybeMessage<::bombplane_proto::UpdateroomBroadcast>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace bombplane_proto {

enum Type {
  UNKNOWN = 0,
  LOGIN_REQUEST = 10001,
  LOGIN_RESPONSE = 10002,
  ONLINELIST_NOTIFICATION = 10003,
  UPDATEONLINE_BROADCAST = 10004,
  INVITE_REQUEST = 10021,
  INVITE_RESPONSE = 10022,
  UPDATEROOM_BROADCAST = 10023,
  QUIT_NOTIFICATION = 20001,
  KEEPALIVE_REQUEST = 20002,
  KEEPALIVE_RESPONSE = 20003,
  INITPOS_REQUEST = 30001,
  GAMESTART_RESPONSE = 30002,
  GAMEOVER_NOTIFICATION = 30003,
  GAMECRUSH_NOTIFICATION = 30004,
  BOMB_REQUEST = 30011,
  BOMB_RESPONSE = 30012,
  GUESS_REQUEST = 30021,
  GUESS_RESPONSE = 30022,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Type_IsValid(int value);
const Type Type_MIN = UNKNOWN;
const Type Type_MAX = GUESS_RESPONSE;
const int Type_ARRAYSIZE = Type_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_descriptor();
inline const ::std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_descriptor(), value);
}
inline bool Type_Parse(
    const ::std::string& name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
    Type_descriptor(), name, value);
}
enum LoginState {
  SUCCESS = 0,
  SUCCESS_KICK = 1,
  NOT_EXIST = 3,
  WRONG_PASSWORD = 4,
  SERVER_ERROR = 5,
  LoginState_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  LoginState_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool LoginState_IsValid(int value);
const LoginState LoginState_MIN = SUCCESS;
const LoginState LoginState_MAX = SERVER_ERROR;
const int LoginState_ARRAYSIZE = LoginState_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginState_descriptor();
inline const ::std::string& LoginState_Name(LoginState value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginState_descriptor(), value);
}
inline bool LoginState_Parse(
    const ::std::string& name, LoginState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginState>(
    LoginState_descriptor(), name, value);
}
enum BOMB_RESULT {
  MISS = 0,
  HIT = 1,
  DESTORYED = 2,
  BOMB_RESULT_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  BOMB_RESULT_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool BOMB_RESULT_IsValid(int value);
const BOMB_RESULT BOMB_RESULT_MIN = MISS;
const BOMB_RESULT BOMB_RESULT_MAX = DESTORYED;
const int BOMB_RESULT_ARRAYSIZE = BOMB_RESULT_MAX + 1;

const ::google::protobuf::EnumDescriptor* BOMB_RESULT_descriptor();
inline const ::std::string& BOMB_RESULT_Name(BOMB_RESULT value) {
  return ::google::protobuf::internal::NameOfEnum(
    BOMB_RESULT_descriptor(), value);
}
inline bool BOMB_RESULT_Parse(
    const ::std::string& name, BOMB_RESULT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BOMB_RESULT>(
    BOMB_RESULT_descriptor(), name, value);
}
// ===================================================================

class LoginRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const final {
    return CreateMaybeMessage<LoginRequest>(nullptr);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // bytes password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:bombplane_proto.LoginRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class LoginResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const final {
    return CreateMaybeMessage<LoginResponse>(nullptr);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.LoginState state = 1;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::bombplane_proto::LoginState state() const;
  void set_state(::bombplane_proto::LoginState value);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.LoginResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int state_;
  ::google::protobuf::int32 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class OnlineUser :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.OnlineUser) */ {
 public:
  OnlineUser();
  virtual ~OnlineUser();

  OnlineUser(const OnlineUser& from);

  inline OnlineUser& operator=(const OnlineUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlineUser(OnlineUser&& from) noexcept
    : OnlineUser() {
    *this = ::std::move(from);
  }

  inline OnlineUser& operator=(OnlineUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OnlineUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnlineUser* internal_default_instance() {
    return reinterpret_cast<const OnlineUser*>(
               &_OnlineUser_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(OnlineUser* other);
  friend void swap(OnlineUser& a, OnlineUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlineUser* New() const final {
    return CreateMaybeMessage<OnlineUser>(nullptr);
  }

  OnlineUser* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OnlineUser>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OnlineUser& from);
  void MergeFrom(const OnlineUser& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OnlineUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // bool available = 3;
  void clear_available();
  static const int kAvailableFieldNumber = 3;
  bool available() const;
  void set_available(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.OnlineUser)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  bool available_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class OnlinelistNotification :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.OnlinelistNotification) */ {
 public:
  OnlinelistNotification();
  virtual ~OnlinelistNotification();

  OnlinelistNotification(const OnlinelistNotification& from);

  inline OnlinelistNotification& operator=(const OnlinelistNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnlinelistNotification(OnlinelistNotification&& from) noexcept
    : OnlinelistNotification() {
    *this = ::std::move(from);
  }

  inline OnlinelistNotification& operator=(OnlinelistNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const OnlinelistNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnlinelistNotification* internal_default_instance() {
    return reinterpret_cast<const OnlinelistNotification*>(
               &_OnlinelistNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(OnlinelistNotification* other);
  friend void swap(OnlinelistNotification& a, OnlinelistNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnlinelistNotification* New() const final {
    return CreateMaybeMessage<OnlinelistNotification>(nullptr);
  }

  OnlinelistNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OnlinelistNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OnlinelistNotification& from);
  void MergeFrom(const OnlinelistNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OnlinelistNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bombplane_proto.OnlineUser onlinelist = 1;
  int onlinelist_size() const;
  void clear_onlinelist();
  static const int kOnlinelistFieldNumber = 1;
  ::bombplane_proto::OnlineUser* mutable_onlinelist(int index);
  ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >*
      mutable_onlinelist();
  const ::bombplane_proto::OnlineUser& onlinelist(int index) const;
  ::bombplane_proto::OnlineUser* add_onlinelist();
  const ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >&
      onlinelist() const;

  // @@protoc_insertion_point(class_scope:bombplane_proto.OnlinelistNotification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser > onlinelist_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class UpdateonlineBroadcast :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.UpdateonlineBroadcast) */ {
 public:
  UpdateonlineBroadcast();
  virtual ~UpdateonlineBroadcast();

  UpdateonlineBroadcast(const UpdateonlineBroadcast& from);

  inline UpdateonlineBroadcast& operator=(const UpdateonlineBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateonlineBroadcast(UpdateonlineBroadcast&& from) noexcept
    : UpdateonlineBroadcast() {
    *this = ::std::move(from);
  }

  inline UpdateonlineBroadcast& operator=(UpdateonlineBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateonlineBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateonlineBroadcast* internal_default_instance() {
    return reinterpret_cast<const UpdateonlineBroadcast*>(
               &_UpdateonlineBroadcast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(UpdateonlineBroadcast* other);
  friend void swap(UpdateonlineBroadcast& a, UpdateonlineBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateonlineBroadcast* New() const final {
    return CreateMaybeMessage<UpdateonlineBroadcast>(nullptr);
  }

  UpdateonlineBroadcast* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateonlineBroadcast>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateonlineBroadcast& from);
  void MergeFrom(const UpdateonlineBroadcast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateonlineBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes username = 1;
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const void* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // bool onoff = 3;
  void clear_onoff();
  static const int kOnoffFieldNumber = 3;
  bool onoff() const;
  void set_onoff(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.UpdateonlineBroadcast)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 userid_;
  bool onoff_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class InviteRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.InviteRequest) */ {
 public:
  InviteRequest();
  virtual ~InviteRequest();

  InviteRequest(const InviteRequest& from);

  inline InviteRequest& operator=(const InviteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InviteRequest(InviteRequest&& from) noexcept
    : InviteRequest() {
    *this = ::std::move(from);
  }

  inline InviteRequest& operator=(InviteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InviteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InviteRequest* internal_default_instance() {
    return reinterpret_cast<const InviteRequest*>(
               &_InviteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(InviteRequest* other);
  friend void swap(InviteRequest& a, InviteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InviteRequest* New() const final {
    return CreateMaybeMessage<InviteRequest>(nullptr);
  }

  InviteRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InviteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InviteRequest& from);
  void MergeFrom(const InviteRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InviteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 taruserid = 1;
  void clear_taruserid();
  static const int kTaruseridFieldNumber = 1;
  ::google::protobuf::int32 taruserid() const;
  void set_taruserid(::google::protobuf::int32 value);

  // int32 srcuserid = 2;
  void clear_srcuserid();
  static const int kSrcuseridFieldNumber = 2;
  ::google::protobuf::int32 srcuserid() const;
  void set_srcuserid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InviteRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 taruserid_;
  ::google::protobuf::int32 srcuserid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class InviteResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.InviteResponse) */ {
 public:
  InviteResponse();
  virtual ~InviteResponse();

  InviteResponse(const InviteResponse& from);

  inline InviteResponse& operator=(const InviteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InviteResponse(InviteResponse&& from) noexcept
    : InviteResponse() {
    *this = ::std::move(from);
  }

  inline InviteResponse& operator=(InviteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InviteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InviteResponse* internal_default_instance() {
    return reinterpret_cast<const InviteResponse*>(
               &_InviteResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(InviteResponse* other);
  friend void swap(InviteResponse& a, InviteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InviteResponse* New() const final {
    return CreateMaybeMessage<InviteResponse>(nullptr);
  }

  InviteResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InviteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InviteResponse& from);
  void MergeFrom(const InviteResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InviteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 taruserid = 1;
  void clear_taruserid();
  static const int kTaruseridFieldNumber = 1;
  ::google::protobuf::int32 taruserid() const;
  void set_taruserid(::google::protobuf::int32 value);

  // bool accept = 2;
  void clear_accept();
  static const int kAcceptFieldNumber = 2;
  bool accept() const;
  void set_accept(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InviteResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 taruserid_;
  bool accept_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class UpdateroomBroadcast :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.UpdateroomBroadcast) */ {
 public:
  UpdateroomBroadcast();
  virtual ~UpdateroomBroadcast();

  UpdateroomBroadcast(const UpdateroomBroadcast& from);

  inline UpdateroomBroadcast& operator=(const UpdateroomBroadcast& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  UpdateroomBroadcast(UpdateroomBroadcast&& from) noexcept
    : UpdateroomBroadcast() {
    *this = ::std::move(from);
  }

  inline UpdateroomBroadcast& operator=(UpdateroomBroadcast&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const UpdateroomBroadcast& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const UpdateroomBroadcast* internal_default_instance() {
    return reinterpret_cast<const UpdateroomBroadcast*>(
               &_UpdateroomBroadcast_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(UpdateroomBroadcast* other);
  friend void swap(UpdateroomBroadcast& a, UpdateroomBroadcast& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline UpdateroomBroadcast* New() const final {
    return CreateMaybeMessage<UpdateroomBroadcast>(nullptr);
  }

  UpdateroomBroadcast* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<UpdateroomBroadcast>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const UpdateroomBroadcast& from);
  void MergeFrom(const UpdateroomBroadcast& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateroomBroadcast* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userid1 = 1;
  void clear_userid1();
  static const int kUserid1FieldNumber = 1;
  ::google::protobuf::int32 userid1() const;
  void set_userid1(::google::protobuf::int32 value);

  // int32 userid2 = 2;
  void clear_userid2();
  static const int kUserid2FieldNumber = 2;
  ::google::protobuf::int32 userid2() const;
  void set_userid2(::google::protobuf::int32 value);

  // bool inout = 3;
  void clear_inout();
  static const int kInoutFieldNumber = 3;
  bool inout() const;
  void set_inout(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.UpdateroomBroadcast)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid1_;
  ::google::protobuf::int32 userid2_;
  bool inout_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class Coordinate :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.Coordinate) */ {
 public:
  Coordinate();
  virtual ~Coordinate();

  Coordinate(const Coordinate& from);

  inline Coordinate& operator=(const Coordinate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Coordinate(Coordinate&& from) noexcept
    : Coordinate() {
    *this = ::std::move(from);
  }

  inline Coordinate& operator=(Coordinate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Coordinate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Coordinate* internal_default_instance() {
    return reinterpret_cast<const Coordinate*>(
               &_Coordinate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(Coordinate* other);
  friend void swap(Coordinate& a, Coordinate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Coordinate* New() const final {
    return CreateMaybeMessage<Coordinate>(nullptr);
  }

  Coordinate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Coordinate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Coordinate& from);
  void MergeFrom(const Coordinate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Coordinate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.Coordinate)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class PlaneLocator :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.PlaneLocator) */ {
 public:
  PlaneLocator();
  virtual ~PlaneLocator();

  PlaneLocator(const PlaneLocator& from);

  inline PlaneLocator& operator=(const PlaneLocator& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneLocator(PlaneLocator&& from) noexcept
    : PlaneLocator() {
    *this = ::std::move(from);
  }

  inline PlaneLocator& operator=(PlaneLocator&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const PlaneLocator& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneLocator* internal_default_instance() {
    return reinterpret_cast<const PlaneLocator*>(
               &_PlaneLocator_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PlaneLocator* other);
  friend void swap(PlaneLocator& a, PlaneLocator& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneLocator* New() const final {
    return CreateMaybeMessage<PlaneLocator>(nullptr);
  }

  PlaneLocator* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PlaneLocator>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PlaneLocator& from);
  void MergeFrom(const PlaneLocator& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlaneLocator* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.Coordinate pos1 = 1;
  bool has_pos1() const;
  void clear_pos1();
  static const int kPos1FieldNumber = 1;
  const ::bombplane_proto::Coordinate& pos1() const;
  ::bombplane_proto::Coordinate* release_pos1();
  ::bombplane_proto::Coordinate* mutable_pos1();
  void set_allocated_pos1(::bombplane_proto::Coordinate* pos1);

  // .bombplane_proto.Coordinate pos2 = 2;
  bool has_pos2() const;
  void clear_pos2();
  static const int kPos2FieldNumber = 2;
  const ::bombplane_proto::Coordinate& pos2() const;
  ::bombplane_proto::Coordinate* release_pos2();
  ::bombplane_proto::Coordinate* mutable_pos2();
  void set_allocated_pos2(::bombplane_proto::Coordinate* pos2);

  // .bombplane_proto.Coordinate pos3 = 3;
  bool has_pos3() const;
  void clear_pos3();
  static const int kPos3FieldNumber = 3;
  const ::bombplane_proto::Coordinate& pos3() const;
  ::bombplane_proto::Coordinate* release_pos3();
  ::bombplane_proto::Coordinate* mutable_pos3();
  void set_allocated_pos3(::bombplane_proto::Coordinate* pos3);

  // @@protoc_insertion_point(class_scope:bombplane_proto.PlaneLocator)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::Coordinate* pos1_;
  ::bombplane_proto::Coordinate* pos2_;
  ::bombplane_proto::Coordinate* pos3_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class InitposRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.InitposRequest) */ {
 public:
  InitposRequest();
  virtual ~InitposRequest();

  InitposRequest(const InitposRequest& from);

  inline InitposRequest& operator=(const InitposRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  InitposRequest(InitposRequest&& from) noexcept
    : InitposRequest() {
    *this = ::std::move(from);
  }

  inline InitposRequest& operator=(InitposRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const InitposRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const InitposRequest* internal_default_instance() {
    return reinterpret_cast<const InitposRequest*>(
               &_InitposRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(InitposRequest* other);
  friend void swap(InitposRequest& a, InitposRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline InitposRequest* New() const final {
    return CreateMaybeMessage<InitposRequest>(nullptr);
  }

  InitposRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<InitposRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const InitposRequest& from);
  void MergeFrom(const InitposRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InitposRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.PlaneLocator loc = 1;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 1;
  const ::bombplane_proto::PlaneLocator& loc() const;
  ::bombplane_proto::PlaneLocator* release_loc();
  ::bombplane_proto::PlaneLocator* mutable_loc();
  void set_allocated_loc(::bombplane_proto::PlaneLocator* loc);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.InitposRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::PlaneLocator* loc_;
  ::google::protobuf::int32 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class GameoverNotification :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.GameoverNotification) */ {
 public:
  GameoverNotification();
  virtual ~GameoverNotification();

  GameoverNotification(const GameoverNotification& from);

  inline GameoverNotification& operator=(const GameoverNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameoverNotification(GameoverNotification&& from) noexcept
    : GameoverNotification() {
    *this = ::std::move(from);
  }

  inline GameoverNotification& operator=(GameoverNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GameoverNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameoverNotification* internal_default_instance() {
    return reinterpret_cast<const GameoverNotification*>(
               &_GameoverNotification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(GameoverNotification* other);
  friend void swap(GameoverNotification& a, GameoverNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameoverNotification* New() const final {
    return CreateMaybeMessage<GameoverNotification>(nullptr);
  }

  GameoverNotification* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GameoverNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GameoverNotification& from);
  void MergeFrom(const GameoverNotification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GameoverNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 winnerid = 1;
  void clear_winnerid();
  static const int kWinneridFieldNumber = 1;
  ::google::protobuf::int32 winnerid() const;
  void set_winnerid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GameoverNotification)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 winnerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class BombRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.BombRequest) */ {
 public:
  BombRequest();
  virtual ~BombRequest();

  BombRequest(const BombRequest& from);

  inline BombRequest& operator=(const BombRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BombRequest(BombRequest&& from) noexcept
    : BombRequest() {
    *this = ::std::move(from);
  }

  inline BombRequest& operator=(BombRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BombRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BombRequest* internal_default_instance() {
    return reinterpret_cast<const BombRequest*>(
               &_BombRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(BombRequest* other);
  friend void swap(BombRequest& a, BombRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BombRequest* New() const final {
    return CreateMaybeMessage<BombRequest>(nullptr);
  }

  BombRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BombRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BombRequest& from);
  void MergeFrom(const BombRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BombRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.Coordinate pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::bombplane_proto::Coordinate& pos() const;
  ::bombplane_proto::Coordinate* release_pos();
  ::bombplane_proto::Coordinate* mutable_pos();
  void set_allocated_pos(::bombplane_proto::Coordinate* pos);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.BombRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::Coordinate* pos_;
  ::google::protobuf::int32 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class BombResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.BombResponse) */ {
 public:
  BombResponse();
  virtual ~BombResponse();

  BombResponse(const BombResponse& from);

  inline BombResponse& operator=(const BombResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  BombResponse(BombResponse&& from) noexcept
    : BombResponse() {
    *this = ::std::move(from);
  }

  inline BombResponse& operator=(BombResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const BombResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const BombResponse* internal_default_instance() {
    return reinterpret_cast<const BombResponse*>(
               &_BombResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(BombResponse* other);
  friend void swap(BombResponse& a, BombResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline BombResponse* New() const final {
    return CreateMaybeMessage<BombResponse>(nullptr);
  }

  BombResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<BombResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const BombResponse& from);
  void MergeFrom(const BombResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(BombResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.Coordinate pos = 2;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  const ::bombplane_proto::Coordinate& pos() const;
  ::bombplane_proto::Coordinate* release_pos();
  ::bombplane_proto::Coordinate* mutable_pos();
  void set_allocated_pos(::bombplane_proto::Coordinate* pos);

  // .bombplane_proto.BOMB_RESULT res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  ::bombplane_proto::BOMB_RESULT res() const;
  void set_res(::bombplane_proto::BOMB_RESULT value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.BombResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::Coordinate* pos_;
  int res_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class GuessRequest :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.GuessRequest) */ {
 public:
  GuessRequest();
  virtual ~GuessRequest();

  GuessRequest(const GuessRequest& from);

  inline GuessRequest& operator=(const GuessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuessRequest(GuessRequest&& from) noexcept
    : GuessRequest() {
    *this = ::std::move(from);
  }

  inline GuessRequest& operator=(GuessRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GuessRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuessRequest* internal_default_instance() {
    return reinterpret_cast<const GuessRequest*>(
               &_GuessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(GuessRequest* other);
  friend void swap(GuessRequest& a, GuessRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuessRequest* New() const final {
    return CreateMaybeMessage<GuessRequest>(nullptr);
  }

  GuessRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuessRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuessRequest& from);
  void MergeFrom(const GuessRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuessRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.PlaneLocator loc = 1;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 1;
  const ::bombplane_proto::PlaneLocator& loc() const;
  ::bombplane_proto::PlaneLocator* release_loc();
  ::bombplane_proto::PlaneLocator* mutable_loc();
  void set_allocated_loc(::bombplane_proto::PlaneLocator* loc);

  // int32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GuessRequest)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::PlaneLocator* loc_;
  ::google::protobuf::int32 userid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class GuessResponse :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.GuessResponse) */ {
 public:
  GuessResponse();
  virtual ~GuessResponse();

  GuessResponse(const GuessResponse& from);

  inline GuessResponse& operator=(const GuessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GuessResponse(GuessResponse&& from) noexcept
    : GuessResponse() {
    *this = ::std::move(from);
  }

  inline GuessResponse& operator=(GuessResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const GuessResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuessResponse* internal_default_instance() {
    return reinterpret_cast<const GuessResponse*>(
               &_GuessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(GuessResponse* other);
  friend void swap(GuessResponse& a, GuessResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GuessResponse* New() const final {
    return CreateMaybeMessage<GuessResponse>(nullptr);
  }

  GuessResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GuessResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GuessResponse& from);
  void MergeFrom(const GuessResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.PlaneLocator loc = 2;
  bool has_loc() const;
  void clear_loc();
  static const int kLocFieldNumber = 2;
  const ::bombplane_proto::PlaneLocator& loc() const;
  ::bombplane_proto::PlaneLocator* release_loc();
  ::bombplane_proto::PlaneLocator* mutable_loc();
  void set_allocated_loc(::bombplane_proto::PlaneLocator* loc);

  // bool res = 1;
  void clear_res();
  static const int kResFieldNumber = 1;
  bool res() const;
  void set_res(bool value);

  // @@protoc_insertion_point(class_scope:bombplane_proto.GuessResponse)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::bombplane_proto::PlaneLocator* loc_;
  bool res_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// -------------------------------------------------------------------

class Message :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bombplane_proto.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message& default_instance();

  enum BodyCase {
    kLoginrequest = 2,
    kLoginresponse = 3,
    kOnlinelistnotification = 4,
    kUpdatelistnotification = 5,
    kInviterequest = 6,
    kUpdateroombroadcast = 7,
    kInitposrequest = 8,
    kGameovernnotification = 9,
    kBombrequest = 10,
    kBombresponse = 11,
    kGuessrequest = 12,
    kGuessresponse = 13,
    BODY_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(nullptr);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .bombplane_proto.Type type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::bombplane_proto::Type type() const;
  void set_type(::bombplane_proto::Type value);

  // .bombplane_proto.LoginRequest loginrequest = 2;
  bool has_loginrequest() const;
  void clear_loginrequest();
  static const int kLoginrequestFieldNumber = 2;
  const ::bombplane_proto::LoginRequest& loginrequest() const;
  ::bombplane_proto::LoginRequest* release_loginrequest();
  ::bombplane_proto::LoginRequest* mutable_loginrequest();
  void set_allocated_loginrequest(::bombplane_proto::LoginRequest* loginrequest);

  // .bombplane_proto.LoginResponse loginresponse = 3;
  bool has_loginresponse() const;
  void clear_loginresponse();
  static const int kLoginresponseFieldNumber = 3;
  const ::bombplane_proto::LoginResponse& loginresponse() const;
  ::bombplane_proto::LoginResponse* release_loginresponse();
  ::bombplane_proto::LoginResponse* mutable_loginresponse();
  void set_allocated_loginresponse(::bombplane_proto::LoginResponse* loginresponse);

  // .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
  bool has_onlinelistnotification() const;
  void clear_onlinelistnotification();
  static const int kOnlinelistnotificationFieldNumber = 4;
  const ::bombplane_proto::OnlinelistNotification& onlinelistnotification() const;
  ::bombplane_proto::OnlinelistNotification* release_onlinelistnotification();
  ::bombplane_proto::OnlinelistNotification* mutable_onlinelistnotification();
  void set_allocated_onlinelistnotification(::bombplane_proto::OnlinelistNotification* onlinelistnotification);

  // .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
  bool has_updatelistnotification() const;
  void clear_updatelistnotification();
  static const int kUpdatelistnotificationFieldNumber = 5;
  const ::bombplane_proto::UpdateonlineBroadcast& updatelistnotification() const;
  ::bombplane_proto::UpdateonlineBroadcast* release_updatelistnotification();
  ::bombplane_proto::UpdateonlineBroadcast* mutable_updatelistnotification();
  void set_allocated_updatelistnotification(::bombplane_proto::UpdateonlineBroadcast* updatelistnotification);

  // .bombplane_proto.InviteRequest inviterequest = 6;
  bool has_inviterequest() const;
  void clear_inviterequest();
  static const int kInviterequestFieldNumber = 6;
  const ::bombplane_proto::InviteRequest& inviterequest() const;
  ::bombplane_proto::InviteRequest* release_inviterequest();
  ::bombplane_proto::InviteRequest* mutable_inviterequest();
  void set_allocated_inviterequest(::bombplane_proto::InviteRequest* inviterequest);

  // .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
  bool has_updateroombroadcast() const;
  void clear_updateroombroadcast();
  static const int kUpdateroombroadcastFieldNumber = 7;
  const ::bombplane_proto::UpdateroomBroadcast& updateroombroadcast() const;
  ::bombplane_proto::UpdateroomBroadcast* release_updateroombroadcast();
  ::bombplane_proto::UpdateroomBroadcast* mutable_updateroombroadcast();
  void set_allocated_updateroombroadcast(::bombplane_proto::UpdateroomBroadcast* updateroombroadcast);

  // .bombplane_proto.InitposRequest initposrequest = 8;
  bool has_initposrequest() const;
  void clear_initposrequest();
  static const int kInitposrequestFieldNumber = 8;
  const ::bombplane_proto::InitposRequest& initposrequest() const;
  ::bombplane_proto::InitposRequest* release_initposrequest();
  ::bombplane_proto::InitposRequest* mutable_initposrequest();
  void set_allocated_initposrequest(::bombplane_proto::InitposRequest* initposrequest);

  // .bombplane_proto.GameoverNotification gameovernnotification = 9;
  bool has_gameovernnotification() const;
  void clear_gameovernnotification();
  static const int kGameovernnotificationFieldNumber = 9;
  const ::bombplane_proto::GameoverNotification& gameovernnotification() const;
  ::bombplane_proto::GameoverNotification* release_gameovernnotification();
  ::bombplane_proto::GameoverNotification* mutable_gameovernnotification();
  void set_allocated_gameovernnotification(::bombplane_proto::GameoverNotification* gameovernnotification);

  // .bombplane_proto.BombRequest bombrequest = 10;
  bool has_bombrequest() const;
  void clear_bombrequest();
  static const int kBombrequestFieldNumber = 10;
  const ::bombplane_proto::BombRequest& bombrequest() const;
  ::bombplane_proto::BombRequest* release_bombrequest();
  ::bombplane_proto::BombRequest* mutable_bombrequest();
  void set_allocated_bombrequest(::bombplane_proto::BombRequest* bombrequest);

  // .bombplane_proto.BombResponse bombresponse = 11;
  bool has_bombresponse() const;
  void clear_bombresponse();
  static const int kBombresponseFieldNumber = 11;
  const ::bombplane_proto::BombResponse& bombresponse() const;
  ::bombplane_proto::BombResponse* release_bombresponse();
  ::bombplane_proto::BombResponse* mutable_bombresponse();
  void set_allocated_bombresponse(::bombplane_proto::BombResponse* bombresponse);

  // .bombplane_proto.GuessRequest guessrequest = 12;
  bool has_guessrequest() const;
  void clear_guessrequest();
  static const int kGuessrequestFieldNumber = 12;
  const ::bombplane_proto::GuessRequest& guessrequest() const;
  ::bombplane_proto::GuessRequest* release_guessrequest();
  ::bombplane_proto::GuessRequest* mutable_guessrequest();
  void set_allocated_guessrequest(::bombplane_proto::GuessRequest* guessrequest);

  // .bombplane_proto.GuessResponse guessresponse = 13;
  bool has_guessresponse() const;
  void clear_guessresponse();
  static const int kGuessresponseFieldNumber = 13;
  const ::bombplane_proto::GuessResponse& guessresponse() const;
  ::bombplane_proto::GuessResponse* release_guessresponse();
  ::bombplane_proto::GuessResponse* mutable_guessresponse();
  void set_allocated_guessresponse(::bombplane_proto::GuessResponse* guessresponse);

  void clear_body();
  BodyCase body_case() const;
  // @@protoc_insertion_point(class_scope:bombplane_proto.Message)
 private:
  class HasBitSetters;
  void set_has_loginrequest();
  void set_has_loginresponse();
  void set_has_onlinelistnotification();
  void set_has_updatelistnotification();
  void set_has_inviterequest();
  void set_has_updateroombroadcast();
  void set_has_initposrequest();
  void set_has_gameovernnotification();
  void set_has_bombrequest();
  void set_has_bombresponse();
  void set_has_guessrequest();
  void set_has_guessresponse();

  inline bool has_body() const;
  inline void clear_has_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int type_;
  union BodyUnion {
    BodyUnion() {}
    ::bombplane_proto::LoginRequest* loginrequest_;
    ::bombplane_proto::LoginResponse* loginresponse_;
    ::bombplane_proto::OnlinelistNotification* onlinelistnotification_;
    ::bombplane_proto::UpdateonlineBroadcast* updatelistnotification_;
    ::bombplane_proto::InviteRequest* inviterequest_;
    ::bombplane_proto::UpdateroomBroadcast* updateroombroadcast_;
    ::bombplane_proto::InitposRequest* initposrequest_;
    ::bombplane_proto::GameoverNotification* gameovernnotification_;
    ::bombplane_proto::BombRequest* bombrequest_;
    ::bombplane_proto::BombResponse* bombresponse_;
    ::bombplane_proto::GuessRequest* guessrequest_;
    ::bombplane_proto::GuessResponse* guessresponse_;
  } body_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::TableStruct_protobuf_2fBombplane_5fProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// bytes username = 1;
inline void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginRequest.username)
  return username_.GetNoArena();
}
inline void LoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginRequest.username)
}
#if LANG_CXX11
inline void LoginRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bombplane_proto.LoginRequest.username)
}
#endif
inline void LoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.LoginRequest.username)
}
inline void LoginRequest::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.LoginRequest.username)
}
inline ::std::string* LoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.LoginRequest.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.LoginRequest.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.LoginRequest.username)
}

// bytes password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bombplane_proto.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.LoginRequest.password)
}
inline void LoginRequest::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:bombplane_proto.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != nullptr) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// .bombplane_proto.LoginState state = 1;
inline void LoginResponse::clear_state() {
  state_ = 0;
}
inline ::bombplane_proto::LoginState LoginResponse::state() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginResponse.state)
  return static_cast< ::bombplane_proto::LoginState >(state_);
}
inline void LoginResponse::set_state(::bombplane_proto::LoginState value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginResponse.state)
}

// int32 userid = 2;
inline void LoginResponse::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.LoginResponse.userid)
  return userid_;
}
inline void LoginResponse::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.LoginResponse.userid)
}

// -------------------------------------------------------------------

// OnlineUser

// bytes username = 1;
inline void OnlineUser::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OnlineUser::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.username)
  return username_.GetNoArena();
}
inline void OnlineUser::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.username)
}
#if LANG_CXX11
inline void OnlineUser::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bombplane_proto.OnlineUser.username)
}
#endif
inline void OnlineUser::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.OnlineUser.username)
}
inline void OnlineUser::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.OnlineUser.username)
}
inline ::std::string* OnlineUser::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.OnlineUser.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnlineUser::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.OnlineUser.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnlineUser::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.OnlineUser.username)
}

// int32 userid = 2;
inline void OnlineUser::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 OnlineUser::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.userid)
  return userid_;
}
inline void OnlineUser::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.userid)
}

// bool available = 3;
inline void OnlineUser::clear_available() {
  available_ = false;
}
inline bool OnlineUser::available() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlineUser.available)
  return available_;
}
inline void OnlineUser::set_available(bool value) {
  
  available_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.OnlineUser.available)
}

// -------------------------------------------------------------------

// OnlinelistNotification

// repeated .bombplane_proto.OnlineUser onlinelist = 1;
inline int OnlinelistNotification::onlinelist_size() const {
  return onlinelist_.size();
}
inline void OnlinelistNotification::clear_onlinelist() {
  onlinelist_.Clear();
}
inline ::bombplane_proto::OnlineUser* OnlinelistNotification::mutable_onlinelist(int index) {
  // @@protoc_insertion_point(field_mutable:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >*
OnlinelistNotification::mutable_onlinelist() {
  // @@protoc_insertion_point(field_mutable_list:bombplane_proto.OnlinelistNotification.onlinelist)
  return &onlinelist_;
}
inline const ::bombplane_proto::OnlineUser& OnlinelistNotification::onlinelist(int index) const {
  // @@protoc_insertion_point(field_get:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Get(index);
}
inline ::bombplane_proto::OnlineUser* OnlinelistNotification::add_onlinelist() {
  // @@protoc_insertion_point(field_add:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bombplane_proto::OnlineUser >&
OnlinelistNotification::onlinelist() const {
  // @@protoc_insertion_point(field_list:bombplane_proto.OnlinelistNotification.onlinelist)
  return onlinelist_;
}

// -------------------------------------------------------------------

// UpdateonlineBroadcast

// bytes username = 1;
inline void UpdateonlineBroadcast::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateonlineBroadcast::username() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.username)
  return username_.GetNoArena();
}
inline void UpdateonlineBroadcast::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.username)
}
#if LANG_CXX11
inline void UpdateonlineBroadcast::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:bombplane_proto.UpdateonlineBroadcast.username)
}
#endif
inline void UpdateonlineBroadcast::set_username(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bombplane_proto.UpdateonlineBroadcast.username)
}
inline void UpdateonlineBroadcast::set_username(const void* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bombplane_proto.UpdateonlineBroadcast.username)
}
inline ::std::string* UpdateonlineBroadcast::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:bombplane_proto.UpdateonlineBroadcast.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateonlineBroadcast::release_username() {
  // @@protoc_insertion_point(field_release:bombplane_proto.UpdateonlineBroadcast.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateonlineBroadcast::set_allocated_username(::std::string* username) {
  if (username != nullptr) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.UpdateonlineBroadcast.username)
}

// int32 userid = 2;
inline void UpdateonlineBroadcast::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 UpdateonlineBroadcast::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.userid)
  return userid_;
}
inline void UpdateonlineBroadcast::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.userid)
}

// bool onoff = 3;
inline void UpdateonlineBroadcast::clear_onoff() {
  onoff_ = false;
}
inline bool UpdateonlineBroadcast::onoff() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateonlineBroadcast.onoff)
  return onoff_;
}
inline void UpdateonlineBroadcast::set_onoff(bool value) {
  
  onoff_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateonlineBroadcast.onoff)
}

// -------------------------------------------------------------------

// InviteRequest

// int32 taruserid = 1;
inline void InviteRequest::clear_taruserid() {
  taruserid_ = 0;
}
inline ::google::protobuf::int32 InviteRequest::taruserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteRequest.taruserid)
  return taruserid_;
}
inline void InviteRequest::set_taruserid(::google::protobuf::int32 value) {
  
  taruserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteRequest.taruserid)
}

// int32 srcuserid = 2;
inline void InviteRequest::clear_srcuserid() {
  srcuserid_ = 0;
}
inline ::google::protobuf::int32 InviteRequest::srcuserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteRequest.srcuserid)
  return srcuserid_;
}
inline void InviteRequest::set_srcuserid(::google::protobuf::int32 value) {
  
  srcuserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteRequest.srcuserid)
}

// -------------------------------------------------------------------

// InviteResponse

// int32 taruserid = 1;
inline void InviteResponse::clear_taruserid() {
  taruserid_ = 0;
}
inline ::google::protobuf::int32 InviteResponse::taruserid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteResponse.taruserid)
  return taruserid_;
}
inline void InviteResponse::set_taruserid(::google::protobuf::int32 value) {
  
  taruserid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteResponse.taruserid)
}

// bool accept = 2;
inline void InviteResponse::clear_accept() {
  accept_ = false;
}
inline bool InviteResponse::accept() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InviteResponse.accept)
  return accept_;
}
inline void InviteResponse::set_accept(bool value) {
  
  accept_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InviteResponse.accept)
}

// -------------------------------------------------------------------

// UpdateroomBroadcast

// int32 userid1 = 1;
inline void UpdateroomBroadcast::clear_userid1() {
  userid1_ = 0;
}
inline ::google::protobuf::int32 UpdateroomBroadcast::userid1() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.userid1)
  return userid1_;
}
inline void UpdateroomBroadcast::set_userid1(::google::protobuf::int32 value) {
  
  userid1_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.userid1)
}

// int32 userid2 = 2;
inline void UpdateroomBroadcast::clear_userid2() {
  userid2_ = 0;
}
inline ::google::protobuf::int32 UpdateroomBroadcast::userid2() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.userid2)
  return userid2_;
}
inline void UpdateroomBroadcast::set_userid2(::google::protobuf::int32 value) {
  
  userid2_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.userid2)
}

// bool inout = 3;
inline void UpdateroomBroadcast::clear_inout() {
  inout_ = false;
}
inline bool UpdateroomBroadcast::inout() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.UpdateroomBroadcast.inout)
  return inout_;
}
inline void UpdateroomBroadcast::set_inout(bool value) {
  
  inout_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.UpdateroomBroadcast.inout)
}

// -------------------------------------------------------------------

// Coordinate

// int32 x = 1;
inline void Coordinate::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Coordinate::x() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Coordinate.x)
  return x_;
}
inline void Coordinate::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Coordinate.x)
}

// int32 y = 2;
inline void Coordinate::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Coordinate::y() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Coordinate.y)
  return y_;
}
inline void Coordinate::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Coordinate.y)
}

// -------------------------------------------------------------------

// PlaneLocator

// .bombplane_proto.Coordinate pos1 = 1;
inline bool PlaneLocator::has_pos1() const {
  return this != internal_default_instance() && pos1_ != nullptr;
}
inline void PlaneLocator::clear_pos1() {
  if (GetArenaNoVirtual() == nullptr && pos1_ != nullptr) {
    delete pos1_;
  }
  pos1_ = nullptr;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos1() const {
  const ::bombplane_proto::Coordinate* p = pos1_;
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos1)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::Coordinate*>(
      &::bombplane_proto::_Coordinate_default_instance_);
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos1() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos1)
  
  ::bombplane_proto::Coordinate* temp = pos1_;
  pos1_ = nullptr;
  return temp;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos1() {
  
  if (pos1_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::Coordinate>(GetArenaNoVirtual());
    pos1_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos1)
  return pos1_;
}
inline void PlaneLocator::set_allocated_pos1(::bombplane_proto::Coordinate* pos1) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos1_;
  }
  if (pos1) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos1 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos1, submessage_arena);
    }
    
  } else {
    
  }
  pos1_ = pos1;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos1)
}

// .bombplane_proto.Coordinate pos2 = 2;
inline bool PlaneLocator::has_pos2() const {
  return this != internal_default_instance() && pos2_ != nullptr;
}
inline void PlaneLocator::clear_pos2() {
  if (GetArenaNoVirtual() == nullptr && pos2_ != nullptr) {
    delete pos2_;
  }
  pos2_ = nullptr;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos2() const {
  const ::bombplane_proto::Coordinate* p = pos2_;
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos2)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::Coordinate*>(
      &::bombplane_proto::_Coordinate_default_instance_);
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos2() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos2)
  
  ::bombplane_proto::Coordinate* temp = pos2_;
  pos2_ = nullptr;
  return temp;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos2() {
  
  if (pos2_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::Coordinate>(GetArenaNoVirtual());
    pos2_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos2)
  return pos2_;
}
inline void PlaneLocator::set_allocated_pos2(::bombplane_proto::Coordinate* pos2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos2_;
  }
  if (pos2) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos2, submessage_arena);
    }
    
  } else {
    
  }
  pos2_ = pos2;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos2)
}

// .bombplane_proto.Coordinate pos3 = 3;
inline bool PlaneLocator::has_pos3() const {
  return this != internal_default_instance() && pos3_ != nullptr;
}
inline void PlaneLocator::clear_pos3() {
  if (GetArenaNoVirtual() == nullptr && pos3_ != nullptr) {
    delete pos3_;
  }
  pos3_ = nullptr;
}
inline const ::bombplane_proto::Coordinate& PlaneLocator::pos3() const {
  const ::bombplane_proto::Coordinate* p = pos3_;
  // @@protoc_insertion_point(field_get:bombplane_proto.PlaneLocator.pos3)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::Coordinate*>(
      &::bombplane_proto::_Coordinate_default_instance_);
}
inline ::bombplane_proto::Coordinate* PlaneLocator::release_pos3() {
  // @@protoc_insertion_point(field_release:bombplane_proto.PlaneLocator.pos3)
  
  ::bombplane_proto::Coordinate* temp = pos3_;
  pos3_ = nullptr;
  return temp;
}
inline ::bombplane_proto::Coordinate* PlaneLocator::mutable_pos3() {
  
  if (pos3_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::Coordinate>(GetArenaNoVirtual());
    pos3_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.PlaneLocator.pos3)
  return pos3_;
}
inline void PlaneLocator::set_allocated_pos3(::bombplane_proto::Coordinate* pos3) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos3_;
  }
  if (pos3) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos3 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos3, submessage_arena);
    }
    
  } else {
    
  }
  pos3_ = pos3;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.PlaneLocator.pos3)
}

// -------------------------------------------------------------------

// InitposRequest

// .bombplane_proto.PlaneLocator loc = 1;
inline bool InitposRequest::has_loc() const {
  return this != internal_default_instance() && loc_ != nullptr;
}
inline void InitposRequest::clear_loc() {
  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
}
inline const ::bombplane_proto::PlaneLocator& InitposRequest::loc() const {
  const ::bombplane_proto::PlaneLocator* p = loc_;
  // @@protoc_insertion_point(field_get:bombplane_proto.InitposRequest.loc)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::PlaneLocator*>(
      &::bombplane_proto::_PlaneLocator_default_instance_);
}
inline ::bombplane_proto::PlaneLocator* InitposRequest::release_loc() {
  // @@protoc_insertion_point(field_release:bombplane_proto.InitposRequest.loc)
  
  ::bombplane_proto::PlaneLocator* temp = loc_;
  loc_ = nullptr;
  return temp;
}
inline ::bombplane_proto::PlaneLocator* InitposRequest::mutable_loc() {
  
  if (loc_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::PlaneLocator>(GetArenaNoVirtual());
    loc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.InitposRequest.loc)
  return loc_;
}
inline void InitposRequest::set_allocated_loc(::bombplane_proto::PlaneLocator* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete loc_;
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    
  } else {
    
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.InitposRequest.loc)
}

// int32 userid = 2;
inline void InitposRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 InitposRequest::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.InitposRequest.userid)
  return userid_;
}
inline void InitposRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.InitposRequest.userid)
}

// -------------------------------------------------------------------

// GameoverNotification

// int32 winnerid = 1;
inline void GameoverNotification::clear_winnerid() {
  winnerid_ = 0;
}
inline ::google::protobuf::int32 GameoverNotification::winnerid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GameoverNotification.winnerid)
  return winnerid_;
}
inline void GameoverNotification::set_winnerid(::google::protobuf::int32 value) {
  
  winnerid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GameoverNotification.winnerid)
}

// -------------------------------------------------------------------

// BombRequest

// .bombplane_proto.Coordinate pos = 1;
inline bool BombRequest::has_pos() const {
  return this != internal_default_instance() && pos_ != nullptr;
}
inline void BombRequest::clear_pos() {
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
}
inline const ::bombplane_proto::Coordinate& BombRequest::pos() const {
  const ::bombplane_proto::Coordinate* p = pos_;
  // @@protoc_insertion_point(field_get:bombplane_proto.BombRequest.pos)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::Coordinate*>(
      &::bombplane_proto::_Coordinate_default_instance_);
}
inline ::bombplane_proto::Coordinate* BombRequest::release_pos() {
  // @@protoc_insertion_point(field_release:bombplane_proto.BombRequest.pos)
  
  ::bombplane_proto::Coordinate* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::bombplane_proto::Coordinate* BombRequest::mutable_pos() {
  
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::Coordinate>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.BombRequest.pos)
  return pos_;
}
inline void BombRequest::set_allocated_pos(::bombplane_proto::Coordinate* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.BombRequest.pos)
}

// int32 userid = 2;
inline void BombRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 BombRequest::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.BombRequest.userid)
  return userid_;
}
inline void BombRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.BombRequest.userid)
}

// -------------------------------------------------------------------

// BombResponse

// .bombplane_proto.BOMB_RESULT res = 1;
inline void BombResponse::clear_res() {
  res_ = 0;
}
inline ::bombplane_proto::BOMB_RESULT BombResponse::res() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.BombResponse.res)
  return static_cast< ::bombplane_proto::BOMB_RESULT >(res_);
}
inline void BombResponse::set_res(::bombplane_proto::BOMB_RESULT value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.BombResponse.res)
}

// .bombplane_proto.Coordinate pos = 2;
inline bool BombResponse::has_pos() const {
  return this != internal_default_instance() && pos_ != nullptr;
}
inline void BombResponse::clear_pos() {
  if (GetArenaNoVirtual() == nullptr && pos_ != nullptr) {
    delete pos_;
  }
  pos_ = nullptr;
}
inline const ::bombplane_proto::Coordinate& BombResponse::pos() const {
  const ::bombplane_proto::Coordinate* p = pos_;
  // @@protoc_insertion_point(field_get:bombplane_proto.BombResponse.pos)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::Coordinate*>(
      &::bombplane_proto::_Coordinate_default_instance_);
}
inline ::bombplane_proto::Coordinate* BombResponse::release_pos() {
  // @@protoc_insertion_point(field_release:bombplane_proto.BombResponse.pos)
  
  ::bombplane_proto::Coordinate* temp = pos_;
  pos_ = nullptr;
  return temp;
}
inline ::bombplane_proto::Coordinate* BombResponse::mutable_pos() {
  
  if (pos_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::Coordinate>(GetArenaNoVirtual());
    pos_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.BombResponse.pos)
  return pos_;
}
inline void BombResponse::set_allocated_pos(::bombplane_proto::Coordinate* pos) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pos_;
  }
  if (pos) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pos = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pos, submessage_arena);
    }
    
  } else {
    
  }
  pos_ = pos;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.BombResponse.pos)
}

// -------------------------------------------------------------------

// GuessRequest

// .bombplane_proto.PlaneLocator loc = 1;
inline bool GuessRequest::has_loc() const {
  return this != internal_default_instance() && loc_ != nullptr;
}
inline void GuessRequest::clear_loc() {
  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
}
inline const ::bombplane_proto::PlaneLocator& GuessRequest::loc() const {
  const ::bombplane_proto::PlaneLocator* p = loc_;
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessRequest.loc)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::PlaneLocator*>(
      &::bombplane_proto::_PlaneLocator_default_instance_);
}
inline ::bombplane_proto::PlaneLocator* GuessRequest::release_loc() {
  // @@protoc_insertion_point(field_release:bombplane_proto.GuessRequest.loc)
  
  ::bombplane_proto::PlaneLocator* temp = loc_;
  loc_ = nullptr;
  return temp;
}
inline ::bombplane_proto::PlaneLocator* GuessRequest::mutable_loc() {
  
  if (loc_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::PlaneLocator>(GetArenaNoVirtual());
    loc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.GuessRequest.loc)
  return loc_;
}
inline void GuessRequest::set_allocated_loc(::bombplane_proto::PlaneLocator* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete loc_;
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    
  } else {
    
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.GuessRequest.loc)
}

// int32 userid = 2;
inline void GuessRequest::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 GuessRequest::userid() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessRequest.userid)
  return userid_;
}
inline void GuessRequest::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GuessRequest.userid)
}

// -------------------------------------------------------------------

// GuessResponse

// bool res = 1;
inline void GuessResponse::clear_res() {
  res_ = false;
}
inline bool GuessResponse::res() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessResponse.res)
  return res_;
}
inline void GuessResponse::set_res(bool value) {
  
  res_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.GuessResponse.res)
}

// .bombplane_proto.PlaneLocator loc = 2;
inline bool GuessResponse::has_loc() const {
  return this != internal_default_instance() && loc_ != nullptr;
}
inline void GuessResponse::clear_loc() {
  if (GetArenaNoVirtual() == nullptr && loc_ != nullptr) {
    delete loc_;
  }
  loc_ = nullptr;
}
inline const ::bombplane_proto::PlaneLocator& GuessResponse::loc() const {
  const ::bombplane_proto::PlaneLocator* p = loc_;
  // @@protoc_insertion_point(field_get:bombplane_proto.GuessResponse.loc)
  return p != nullptr ? *p : *reinterpret_cast<const ::bombplane_proto::PlaneLocator*>(
      &::bombplane_proto::_PlaneLocator_default_instance_);
}
inline ::bombplane_proto::PlaneLocator* GuessResponse::release_loc() {
  // @@protoc_insertion_point(field_release:bombplane_proto.GuessResponse.loc)
  
  ::bombplane_proto::PlaneLocator* temp = loc_;
  loc_ = nullptr;
  return temp;
}
inline ::bombplane_proto::PlaneLocator* GuessResponse::mutable_loc() {
  
  if (loc_ == nullptr) {
    auto* p = CreateMaybeMessage<::bombplane_proto::PlaneLocator>(GetArenaNoVirtual());
    loc_ = p;
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.GuessResponse.loc)
  return loc_;
}
inline void GuessResponse::set_allocated_loc(::bombplane_proto::PlaneLocator* loc) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete loc_;
  }
  if (loc) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      loc = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loc, submessage_arena);
    }
    
  } else {
    
  }
  loc_ = loc;
  // @@protoc_insertion_point(field_set_allocated:bombplane_proto.GuessResponse.loc)
}

// -------------------------------------------------------------------

// Message

// .bombplane_proto.Type type = 1;
inline void Message::clear_type() {
  type_ = 0;
}
inline ::bombplane_proto::Type Message::type() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.type)
  return static_cast< ::bombplane_proto::Type >(type_);
}
inline void Message::set_type(::bombplane_proto::Type value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:bombplane_proto.Message.type)
}

// .bombplane_proto.LoginRequest loginrequest = 2;
inline bool Message::has_loginrequest() const {
  return body_case() == kLoginrequest;
}
inline void Message::set_has_loginrequest() {
  _oneof_case_[0] = kLoginrequest;
}
inline void Message::clear_loginrequest() {
  if (has_loginrequest()) {
    delete body_.loginrequest_;
    clear_has_body();
  }
}
inline ::bombplane_proto::LoginRequest* Message::release_loginrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.loginrequest)
  if (has_loginrequest()) {
    clear_has_body();
      ::bombplane_proto::LoginRequest* temp = body_.loginrequest_;
    body_.loginrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::LoginRequest& Message::loginrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.loginrequest)
  return has_loginrequest()
      ? *body_.loginrequest_
      : *reinterpret_cast< ::bombplane_proto::LoginRequest*>(&::bombplane_proto::_LoginRequest_default_instance_);
}
inline ::bombplane_proto::LoginRequest* Message::mutable_loginrequest() {
  if (!has_loginrequest()) {
    clear_body();
    set_has_loginrequest();
    body_.loginrequest_ = CreateMaybeMessage< ::bombplane_proto::LoginRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.loginrequest)
  return body_.loginrequest_;
}

// .bombplane_proto.LoginResponse loginresponse = 3;
inline bool Message::has_loginresponse() const {
  return body_case() == kLoginresponse;
}
inline void Message::set_has_loginresponse() {
  _oneof_case_[0] = kLoginresponse;
}
inline void Message::clear_loginresponse() {
  if (has_loginresponse()) {
    delete body_.loginresponse_;
    clear_has_body();
  }
}
inline ::bombplane_proto::LoginResponse* Message::release_loginresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.loginresponse)
  if (has_loginresponse()) {
    clear_has_body();
      ::bombplane_proto::LoginResponse* temp = body_.loginresponse_;
    body_.loginresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::LoginResponse& Message::loginresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.loginresponse)
  return has_loginresponse()
      ? *body_.loginresponse_
      : *reinterpret_cast< ::bombplane_proto::LoginResponse*>(&::bombplane_proto::_LoginResponse_default_instance_);
}
inline ::bombplane_proto::LoginResponse* Message::mutable_loginresponse() {
  if (!has_loginresponse()) {
    clear_body();
    set_has_loginresponse();
    body_.loginresponse_ = CreateMaybeMessage< ::bombplane_proto::LoginResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.loginresponse)
  return body_.loginresponse_;
}

// .bombplane_proto.OnlinelistNotification onlinelistnotification = 4;
inline bool Message::has_onlinelistnotification() const {
  return body_case() == kOnlinelistnotification;
}
inline void Message::set_has_onlinelistnotification() {
  _oneof_case_[0] = kOnlinelistnotification;
}
inline void Message::clear_onlinelistnotification() {
  if (has_onlinelistnotification()) {
    delete body_.onlinelistnotification_;
    clear_has_body();
  }
}
inline ::bombplane_proto::OnlinelistNotification* Message::release_onlinelistnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.onlinelistnotification)
  if (has_onlinelistnotification()) {
    clear_has_body();
      ::bombplane_proto::OnlinelistNotification* temp = body_.onlinelistnotification_;
    body_.onlinelistnotification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::OnlinelistNotification& Message::onlinelistnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.onlinelistnotification)
  return has_onlinelistnotification()
      ? *body_.onlinelistnotification_
      : *reinterpret_cast< ::bombplane_proto::OnlinelistNotification*>(&::bombplane_proto::_OnlinelistNotification_default_instance_);
}
inline ::bombplane_proto::OnlinelistNotification* Message::mutable_onlinelistnotification() {
  if (!has_onlinelistnotification()) {
    clear_body();
    set_has_onlinelistnotification();
    body_.onlinelistnotification_ = CreateMaybeMessage< ::bombplane_proto::OnlinelistNotification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.onlinelistnotification)
  return body_.onlinelistnotification_;
}

// .bombplane_proto.UpdateonlineBroadcast updatelistnotification = 5;
inline bool Message::has_updatelistnotification() const {
  return body_case() == kUpdatelistnotification;
}
inline void Message::set_has_updatelistnotification() {
  _oneof_case_[0] = kUpdatelistnotification;
}
inline void Message::clear_updatelistnotification() {
  if (has_updatelistnotification()) {
    delete body_.updatelistnotification_;
    clear_has_body();
  }
}
inline ::bombplane_proto::UpdateonlineBroadcast* Message::release_updatelistnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.updatelistnotification)
  if (has_updatelistnotification()) {
    clear_has_body();
      ::bombplane_proto::UpdateonlineBroadcast* temp = body_.updatelistnotification_;
    body_.updatelistnotification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::UpdateonlineBroadcast& Message::updatelistnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.updatelistnotification)
  return has_updatelistnotification()
      ? *body_.updatelistnotification_
      : *reinterpret_cast< ::bombplane_proto::UpdateonlineBroadcast*>(&::bombplane_proto::_UpdateonlineBroadcast_default_instance_);
}
inline ::bombplane_proto::UpdateonlineBroadcast* Message::mutable_updatelistnotification() {
  if (!has_updatelistnotification()) {
    clear_body();
    set_has_updatelistnotification();
    body_.updatelistnotification_ = CreateMaybeMessage< ::bombplane_proto::UpdateonlineBroadcast >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.updatelistnotification)
  return body_.updatelistnotification_;
}

// .bombplane_proto.InviteRequest inviterequest = 6;
inline bool Message::has_inviterequest() const {
  return body_case() == kInviterequest;
}
inline void Message::set_has_inviterequest() {
  _oneof_case_[0] = kInviterequest;
}
inline void Message::clear_inviterequest() {
  if (has_inviterequest()) {
    delete body_.inviterequest_;
    clear_has_body();
  }
}
inline ::bombplane_proto::InviteRequest* Message::release_inviterequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.inviterequest)
  if (has_inviterequest()) {
    clear_has_body();
      ::bombplane_proto::InviteRequest* temp = body_.inviterequest_;
    body_.inviterequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::InviteRequest& Message::inviterequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.inviterequest)
  return has_inviterequest()
      ? *body_.inviterequest_
      : *reinterpret_cast< ::bombplane_proto::InviteRequest*>(&::bombplane_proto::_InviteRequest_default_instance_);
}
inline ::bombplane_proto::InviteRequest* Message::mutable_inviterequest() {
  if (!has_inviterequest()) {
    clear_body();
    set_has_inviterequest();
    body_.inviterequest_ = CreateMaybeMessage< ::bombplane_proto::InviteRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.inviterequest)
  return body_.inviterequest_;
}

// .bombplane_proto.UpdateroomBroadcast updateroombroadcast = 7;
inline bool Message::has_updateroombroadcast() const {
  return body_case() == kUpdateroombroadcast;
}
inline void Message::set_has_updateroombroadcast() {
  _oneof_case_[0] = kUpdateroombroadcast;
}
inline void Message::clear_updateroombroadcast() {
  if (has_updateroombroadcast()) {
    delete body_.updateroombroadcast_;
    clear_has_body();
  }
}
inline ::bombplane_proto::UpdateroomBroadcast* Message::release_updateroombroadcast() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.updateroombroadcast)
  if (has_updateroombroadcast()) {
    clear_has_body();
      ::bombplane_proto::UpdateroomBroadcast* temp = body_.updateroombroadcast_;
    body_.updateroombroadcast_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::UpdateroomBroadcast& Message::updateroombroadcast() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.updateroombroadcast)
  return has_updateroombroadcast()
      ? *body_.updateroombroadcast_
      : *reinterpret_cast< ::bombplane_proto::UpdateroomBroadcast*>(&::bombplane_proto::_UpdateroomBroadcast_default_instance_);
}
inline ::bombplane_proto::UpdateroomBroadcast* Message::mutable_updateroombroadcast() {
  if (!has_updateroombroadcast()) {
    clear_body();
    set_has_updateroombroadcast();
    body_.updateroombroadcast_ = CreateMaybeMessage< ::bombplane_proto::UpdateroomBroadcast >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.updateroombroadcast)
  return body_.updateroombroadcast_;
}

// .bombplane_proto.InitposRequest initposrequest = 8;
inline bool Message::has_initposrequest() const {
  return body_case() == kInitposrequest;
}
inline void Message::set_has_initposrequest() {
  _oneof_case_[0] = kInitposrequest;
}
inline void Message::clear_initposrequest() {
  if (has_initposrequest()) {
    delete body_.initposrequest_;
    clear_has_body();
  }
}
inline ::bombplane_proto::InitposRequest* Message::release_initposrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.initposrequest)
  if (has_initposrequest()) {
    clear_has_body();
      ::bombplane_proto::InitposRequest* temp = body_.initposrequest_;
    body_.initposrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::InitposRequest& Message::initposrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.initposrequest)
  return has_initposrequest()
      ? *body_.initposrequest_
      : *reinterpret_cast< ::bombplane_proto::InitposRequest*>(&::bombplane_proto::_InitposRequest_default_instance_);
}
inline ::bombplane_proto::InitposRequest* Message::mutable_initposrequest() {
  if (!has_initposrequest()) {
    clear_body();
    set_has_initposrequest();
    body_.initposrequest_ = CreateMaybeMessage< ::bombplane_proto::InitposRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.initposrequest)
  return body_.initposrequest_;
}

// .bombplane_proto.GameoverNotification gameovernnotification = 9;
inline bool Message::has_gameovernnotification() const {
  return body_case() == kGameovernnotification;
}
inline void Message::set_has_gameovernnotification() {
  _oneof_case_[0] = kGameovernnotification;
}
inline void Message::clear_gameovernnotification() {
  if (has_gameovernnotification()) {
    delete body_.gameovernnotification_;
    clear_has_body();
  }
}
inline ::bombplane_proto::GameoverNotification* Message::release_gameovernnotification() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.gameovernnotification)
  if (has_gameovernnotification()) {
    clear_has_body();
      ::bombplane_proto::GameoverNotification* temp = body_.gameovernnotification_;
    body_.gameovernnotification_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::GameoverNotification& Message::gameovernnotification() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.gameovernnotification)
  return has_gameovernnotification()
      ? *body_.gameovernnotification_
      : *reinterpret_cast< ::bombplane_proto::GameoverNotification*>(&::bombplane_proto::_GameoverNotification_default_instance_);
}
inline ::bombplane_proto::GameoverNotification* Message::mutable_gameovernnotification() {
  if (!has_gameovernnotification()) {
    clear_body();
    set_has_gameovernnotification();
    body_.gameovernnotification_ = CreateMaybeMessage< ::bombplane_proto::GameoverNotification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.gameovernnotification)
  return body_.gameovernnotification_;
}

// .bombplane_proto.BombRequest bombrequest = 10;
inline bool Message::has_bombrequest() const {
  return body_case() == kBombrequest;
}
inline void Message::set_has_bombrequest() {
  _oneof_case_[0] = kBombrequest;
}
inline void Message::clear_bombrequest() {
  if (has_bombrequest()) {
    delete body_.bombrequest_;
    clear_has_body();
  }
}
inline ::bombplane_proto::BombRequest* Message::release_bombrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.bombrequest)
  if (has_bombrequest()) {
    clear_has_body();
      ::bombplane_proto::BombRequest* temp = body_.bombrequest_;
    body_.bombrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::BombRequest& Message::bombrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.bombrequest)
  return has_bombrequest()
      ? *body_.bombrequest_
      : *reinterpret_cast< ::bombplane_proto::BombRequest*>(&::bombplane_proto::_BombRequest_default_instance_);
}
inline ::bombplane_proto::BombRequest* Message::mutable_bombrequest() {
  if (!has_bombrequest()) {
    clear_body();
    set_has_bombrequest();
    body_.bombrequest_ = CreateMaybeMessage< ::bombplane_proto::BombRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.bombrequest)
  return body_.bombrequest_;
}

// .bombplane_proto.BombResponse bombresponse = 11;
inline bool Message::has_bombresponse() const {
  return body_case() == kBombresponse;
}
inline void Message::set_has_bombresponse() {
  _oneof_case_[0] = kBombresponse;
}
inline void Message::clear_bombresponse() {
  if (has_bombresponse()) {
    delete body_.bombresponse_;
    clear_has_body();
  }
}
inline ::bombplane_proto::BombResponse* Message::release_bombresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.bombresponse)
  if (has_bombresponse()) {
    clear_has_body();
      ::bombplane_proto::BombResponse* temp = body_.bombresponse_;
    body_.bombresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::BombResponse& Message::bombresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.bombresponse)
  return has_bombresponse()
      ? *body_.bombresponse_
      : *reinterpret_cast< ::bombplane_proto::BombResponse*>(&::bombplane_proto::_BombResponse_default_instance_);
}
inline ::bombplane_proto::BombResponse* Message::mutable_bombresponse() {
  if (!has_bombresponse()) {
    clear_body();
    set_has_bombresponse();
    body_.bombresponse_ = CreateMaybeMessage< ::bombplane_proto::BombResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.bombresponse)
  return body_.bombresponse_;
}

// .bombplane_proto.GuessRequest guessrequest = 12;
inline bool Message::has_guessrequest() const {
  return body_case() == kGuessrequest;
}
inline void Message::set_has_guessrequest() {
  _oneof_case_[0] = kGuessrequest;
}
inline void Message::clear_guessrequest() {
  if (has_guessrequest()) {
    delete body_.guessrequest_;
    clear_has_body();
  }
}
inline ::bombplane_proto::GuessRequest* Message::release_guessrequest() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.guessrequest)
  if (has_guessrequest()) {
    clear_has_body();
      ::bombplane_proto::GuessRequest* temp = body_.guessrequest_;
    body_.guessrequest_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::GuessRequest& Message::guessrequest() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.guessrequest)
  return has_guessrequest()
      ? *body_.guessrequest_
      : *reinterpret_cast< ::bombplane_proto::GuessRequest*>(&::bombplane_proto::_GuessRequest_default_instance_);
}
inline ::bombplane_proto::GuessRequest* Message::mutable_guessrequest() {
  if (!has_guessrequest()) {
    clear_body();
    set_has_guessrequest();
    body_.guessrequest_ = CreateMaybeMessage< ::bombplane_proto::GuessRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.guessrequest)
  return body_.guessrequest_;
}

// .bombplane_proto.GuessResponse guessresponse = 13;
inline bool Message::has_guessresponse() const {
  return body_case() == kGuessresponse;
}
inline void Message::set_has_guessresponse() {
  _oneof_case_[0] = kGuessresponse;
}
inline void Message::clear_guessresponse() {
  if (has_guessresponse()) {
    delete body_.guessresponse_;
    clear_has_body();
  }
}
inline ::bombplane_proto::GuessResponse* Message::release_guessresponse() {
  // @@protoc_insertion_point(field_release:bombplane_proto.Message.guessresponse)
  if (has_guessresponse()) {
    clear_has_body();
      ::bombplane_proto::GuessResponse* temp = body_.guessresponse_;
    body_.guessresponse_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::bombplane_proto::GuessResponse& Message::guessresponse() const {
  // @@protoc_insertion_point(field_get:bombplane_proto.Message.guessresponse)
  return has_guessresponse()
      ? *body_.guessresponse_
      : *reinterpret_cast< ::bombplane_proto::GuessResponse*>(&::bombplane_proto::_GuessResponse_default_instance_);
}
inline ::bombplane_proto::GuessResponse* Message::mutable_guessresponse() {
  if (!has_guessresponse()) {
    clear_body();
    set_has_guessresponse();
    body_.guessresponse_ = CreateMaybeMessage< ::bombplane_proto::GuessResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:bombplane_proto.Message.guessresponse)
  return body_.guessresponse_;
}

inline bool Message::has_body() const {
  return body_case() != BODY_NOT_SET;
}
inline void Message::clear_has_body() {
  _oneof_case_[0] = BODY_NOT_SET;
}
inline Message::BodyCase Message::body_case() const {
  return Message::BodyCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bombplane_proto

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::bombplane_proto::Type> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bombplane_proto::Type>() {
  return ::bombplane_proto::Type_descriptor();
}
template <> struct is_proto_enum< ::bombplane_proto::LoginState> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bombplane_proto::LoginState>() {
  return ::bombplane_proto::LoginState_descriptor();
}
template <> struct is_proto_enum< ::bombplane_proto::BOMB_RESULT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bombplane_proto::BOMB_RESULT>() {
  return ::bombplane_proto::BOMB_RESULT_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_protobuf_2fBombplane_5fProto_2eproto
